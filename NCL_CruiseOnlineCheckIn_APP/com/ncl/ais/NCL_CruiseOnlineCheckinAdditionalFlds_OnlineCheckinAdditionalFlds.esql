





BROKER SCHEMA com.ncl.ais

DECLARE ns9 NAMESPACE 'http://nclapi/schemas';
/* ------------------------------------------------------------------------------------
* *********** OWNER *********
* ------------------------------------------------------------------------------------
* COMPANY : Norwegian Cruise Line
* PROJECT : WESB-AIS Migration
* FLOW NAME : NCL_CruiseOnlineCheckinAdditionalFldsRQ
* MODULE NAME : OnlineCheckinAdditionalFlds
* Description : This module is used to capture the initial request for processing and sending the final response.
* ------------------------------------------------------------------------------------
* *********** MODIFICATION HISTORY *********
* ------------------------------------------------------------------------------------
* Current Team Revision: $Revision$
* VERSION CRNUM DATE Author Descr of Revision
* 1.0 11/03/2017 Prolifics Initial version
* 1.1
* ------------------------------------------------------------------------------------*/


CREATE COMPUTE MODULE NCL_CruiseOnlineCheckinAdditionalFlds_OnlineCheckinAdditionalFlds
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		CREATE FIELD Environment.Variables AS rEnv;

		CREATE LASTCHILD OF rEnv DOMAIN 'XMLNSC' NAME 'XMLNSC';

		SET rEnv.XMLNSC = InputRoot.XMLNSC;
		SET rEnv.MQMD = InputRoot.MQMD;
		SET rEnv.MQMD.Expiry = MSG_EXPIRY;
		IF LENGTH(TRIM(InputRoot.MQMD.ReplyToQ)) = 0 THEN
			SET rEnv.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;
		DECLARE bPayload BLOB ASBITSTREAM(InputRoot.XMLNSC CCSID 1208 ENCODING 546);
		DECLARE cLocalTranId CHARACTER InputRoot.MQMD.MsgId;

		CALL com.ncl.iib.log.CreateAuditLogEvent(rEnv, cLocalTranId, '', '');
		IF (LogPayLoad) THEN
		CALL com.ncl.iib.log.AddPayloadLogEvent(bPayload, NodeLabel, 'Cruise_Online_Checkin_Additional_Flds input request...', 'xml', rEnv);
		END IF;
		DECLARE rIn REFERENCE TO rEnv.XMLNSC.*:NCL_CruiseOnlineCheckInAdditionalFldsRQ;
		-- Uncomment the below block once GTM is finalized
		CALL com.ncl.iib.log.CreateMetaDataSet(COALESCE(rIn.*:POS.*:Source.*:RequestorID.(XMLNSC.Attribute)ID, COALESCE(rIn.*:POS.*:Source.(XMLNSC.Attribute)PseudoCityCode, '')),
												COALESCE(rIn.*:POS.*:Source.*:BookingChannel.*:CompanyName.(XMLNSC.Attribute)Code, ''),
												'',
												'',
												'',
											 	rEnv);


		DECLARE Query CHARACTER 'select RECORD_ID,GUEST_ID,FIELD_NAM,STR_VALUE,RAW_RNUM_
		from (select raw_sql_.*, rownum raw_rnum_ from (SELECT * FROM ncl_online_checkin_addit_flds
		WHERE (ncl_online_checkin_addit_flds.guest_id = ? AND (field_nam = ''CITIZENSHIP_POLICY'')) ) raw_sql_ where rownum <= 1) where raw_rnum_ > 0';
		

		SET rEnv.Temp.DBResults[] = PASSTHRU(Query VALUES(rIn.*:GuestId));
		CALL com.ncl.iib.log.AddLogEvent(NodeLabel, 'Successfully executed the databse query', rEnv);
		SET OutputRoot.MQMD = rEnv.MQMD;
		DECLARE rOut REFERENCE TO OutputRoot.XMLNSC.ns9:NCL_CruiseOnlineCheckInAdditionalFldsRS;
		CREATE FIELD OutputRoot.XMLNSC.ns9:NCL_CruiseOnlineCheckInAdditionalFldsRS AS rOut;


		CASE
		WHEN NOT EXISTS(rIn.*:GuestId[]) OR rIn.*:GuestId = '' OR rIn.*:GuestId IS NULL THEN
			SET rOut.ns9:Errors.ns9:Error.(XMLNSC.Attribute)Code = '12228';
			SET rOut.ns9:Errors.ns9:Error.(XMLNSC.Attribute)ShortText = 'Field value for GuestId is missing';
			SET rOut.ns9:Errors.ns9:Error.(XMLNSC.Attribute)Type = '3';
			CALL com.ncl.iib.log.AddLogEvent(NodeLabel, 'Guest Id is missing in the request', rEnv);

		WHEN SQLCODE <> 0 THEN
			SET rOut.ns9:Errors.ns9:Error.(XMLNSC.Attribute)Code = '88798';
			SET rOut.ns9:Errors.ns9:Error.(XMLNSC.Attribute)ShortText = SQLERRORTEXT;
			SET rOut.ns9:Errors.ns9:Error.(XMLNSC.Attribute)Type = '3';
			CALL com.ncl.iib.log.AddLogEvent(NodeLabel, 'Database Query returned an error', rEnv);
		WHEN NOT EXISTS(rEnv.Temp.DBResults[]) THEN
			SET rOut.ns9:Warnings.ns9:Warning.(XMLNSC.Attribute)Code = '88799';
			SET rOut.ns9:Warnings.ns9:Warning.(XMLNSC.Attribute)ShortText = 'No Match Found';
			SET rOut.ns9:Warnings.ns9:Warning.(XMLNSC.Attribute)Type = '3';
			
		WHEN CARDINALITY(rEnv.Temp.DBResults[]) > 100 THEN
			SET rOut.ns9:Warnings.ns9:Warning.(XMLNSC.Attribute)Code = '88798';
			SET rOut.ns9:Warnings.ns9:Warning.(XMLNSC.Attribute)ShortText = 'Matches Exceeded Limit';
			SET rOut.ns9:Warnings.ns9:Warning.(XMLNSC.Attribute)Type = '3';
			
		ELSE
			CREATE FIELD rOut.ns9:Success;
			CREATE FIELD rOut.ns9:Records;
			DECLARE rRecord REFERENCE TO rOut.ns9:Records;
			FOR source AS rEnv.Temp.DBResults[] DO
				CREATE LASTCHILD OF rOut.ns9:Records AS rRecord NAMESPACE ns9 NAME 'Record';
				SET rRecord.ns9:RecordID = source.RECORD_ID;
				SET rRecord.ns9:GuestID = source.GUEST_ID;
				SET rRecord.ns9:FieldName = source.FIELD_NAM;
				SET rRecord.ns9:StrValue = source.STR_VALUE;
			END FOR;
			SET bPayload = ASBITSTREAM(OutputRoot.XMLNSC CCSID 1208 ENCODING 546);
			IF (LogPayLoad) THEN
			CALL com.ncl.iib.log.AddPayloadLogEvent(bPayload, NodeLabel, 'Cruise_Online_Checkin_Additional_Flds Success response payload...', 'xml', rEnv);
			END IF;
			SET OutputRoot.XMLNSC = NULL;
			SET OutputRoot.BLOB.BLOB = bPayload;
		END CASE;
		RETURN TRUE;
	END;

END MODULE;
/* ------------------------------------------------------------------------------------
* *********** OWNER *********
* ------------------------------------------------------------------------------------
* COMPANY : Norwegian Cruise Line
* PROJECT : WESB-AIS Migration
* FLOW NAME : NCL_CruiseOnlineCheckinAdditionalFldsRQ
* MODULE NAME : Exception
* Description : This module is used for capturing the exception occurred in the IIB flow and send it for error logging.
* ------------------------------------------------------------------------------------
* *********** MODIFICATION HISTORY *********
* ------------------------------------------------------------------------------------
* Current Team Revision: $Revision$
* VERSION CRNUM DATE Author Descr of Revision
* 1.0 11/03/2017 Prolifics Initial version
* 1.1
* ------------------------------------------------------------------------------------*/


CREATE COMPUTE MODULE NCL_CruiseOnlineCheckinAdditionalFlds_Exception
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE cLocalTranId CHARACTER COALESCE(InputRoot.MQRFH2.usr.mqaJobId, InputRoot.MQMD.MsgId);

		IF NOT EXISTS(Environment.Variables[]) THEN
			CREATE FIELD Environment.Variables AS rEnv;
		END IF;

		IF NOT EXISTS(rEnv.GTM.LogEvent[]) THEN
			CALL com.ncl.iib.log.CreateAuditLogEvent(rEnv, cLocalTranId, '', '');
		END IF;

		SET OutputRoot = InputRoot;
		
		RETURN TRUE;
	END;
END MODULE;
/* ------------------------------------------------------------------------------------
* *********** OWNER *********
* ------------------------------------------------------------------------------------
* COMPANY : Norwegian Cruise Line
* PROJECT : WESB-AIS Migration
* FLOW NAME : NCL_CruiseOnlineCheckinAdditionalFldsRQ
* MODULE NAME : ExceptionHandler
* Description : This module is used to send exception message to the caller in case of IIB Runtime error.
* ------------------------------------------------------------------------------------
* *********** MODIFICATION HISTORY *********
* ------------------------------------------------------------------------------------
* Current Team Revision: $Revision$
* VERSION CRNUM DATE Author Descr of Revision
* 1.0 11/03/2017 Prolifics Initial version
* 1.1
* ------------------------------------------------------------------------------------*/



CREATE COMPUTE MODULE NCL_CruiseOnlineCheckinAdditionalFlds_ExceptionHandler
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rExcp REFERENCE TO InputExceptionList;
		DECLARE rEnv REFERENCE TO Environment.Variables;
		CREATE FIELD Environment.Variables AS rEnv;
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQMD.Expiry = MSG_EXPIRY;
		IF LENGTH(InputRoot.MQMD.ReplyToQ)= 0 THEN
		 SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;

		DECLARE runTimeErr REFERENCE TO OutputRoot.XMLNSC.ns9:NCL_CruiseOnlineCheckInAdditionalFldsRS;

		DECLARE cErrorText CHARACTER 'Internal IIB Error, please check the logs';

		IF EXISTS(InputExceptionList.RecoverableException[]) THEN
			CALL com.ncl.iib.utils.getExceptionSummary(rEnv, rExcp);
			SET cErrorText = COALESCE(rEnv.ErrorSummary.ErrorText, '');
		END IF;


		CREATE FIELD OutputRoot.XMLNSC.ns9:NCL_CruiseOnlineCheckInAdditionalFldsRS AS runTimeErr;

		SET runTimeErr.ns9:Errors.ns9:Error = cErrorText;
		SET runTimeErr.ns9:Errors.ns9:Error.(XMLNSC.Attribute)Code = '12228';
		SET runTimeErr.ns9:Errors.ns9:Error.(XMLNSC.Attribute)ShortText = 'System error from back end. Please try again later.';
		SET runTimeErr.ns9:Errors.ns9:Error.(XMLNSC.Attribute)Type = '3';

		RETURN TRUE;
	END;
END MODULE;