BROKER SCHEMA com.ncl.ais

CREATE COMPUTE MODULE NCL_LoadPortInfoToCache_ReadDatabase
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.CacheMetadata;
		CREATE FIELD Environment.Variables AS rEnv;

		DECLARE cQuery CHARACTER '';
		DECLARE cLocalTranId CHARACTER COALESCE(InputRoot.MQMD.MsgId, UUIDASCHAR);
		SET cLocalTranId = SUBSTRING(REPLACE(cLocalTranId, '''', '') FROM 2);

		-- create IIB log event
		CALL com.ncl.iib.log.CreateAuditLogEvent(rEnv, cLocalTranId, '', '');

		--add MetaData to Log Event
		CALL com.ncl.iib.log.CreateMetaDataSet('PortInfo', '', '', '', '', rEnv);

		SET rEnv.Temp.DB.PortList[] = SELECT P.PORT_CODE, P.PORT_NAME, P.COUNTRY_CODE FROM Database.SEA.PORT AS P;
		
		IF EXISTS(rEnv.Temp.DB.PortList[]) THEN
			-- add audit trail
			CALL com.ncl.iib.log.AddLogEvent(NodeLabel, 'Retrieved port info from database, proceeding with loading cache ...', rEnv);
			
			PROPAGATE TO TERMINAL 'out1';
		ELSE
			-- add audit trail
			CALL com.ncl.iib.log.AddLogEvent(NodeLabel, 'No port info found ...', rEnv);
		END IF;

		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE NCL_LoadPortInfoToCache_Exception
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE cLocalTranId CHARACTER COALESCE(InputRoot.MQMD.MsgId, UUIDASCHAR);
		
		SET cLocalTranId = TRANSLATE(cLocalTranId, 'X''', '');
		
		IF NOT EXISTS(Environment.Variables[]) THEN 
			CREATE FIELD Environment.Variables AS rEnv;
		END IF;
		
		IF NOT EXISTS(rEnv.GTM.LogEvent[]) THEN
			CALL com.ncl.iib.log.CreateAuditLogEvent(rEnv, cLocalTranId, '', '');
		END IF;
		
		SET OutputRoot = InputRoot;
		
		RETURN TRUE;
	END;
END MODULE;
