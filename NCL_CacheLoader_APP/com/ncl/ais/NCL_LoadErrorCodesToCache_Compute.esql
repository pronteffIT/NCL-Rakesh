BROKER SCHEMA com.ncl.ais

DECLARE EXTERNAL_TABLE EXTERNAL CHARACTER '''AdvisoryCondition'',''Insurance''';
DECLARE EXTERNAL_NAME EXTERNAL CHARACTER '';
DECLARE EXTERNAL_SUB_NAME EXTERNAL CHARACTER '';
DECLARE SUBCODES EXTERNAL CHARACTER 'ONE';
CREATE COMPUTE MODULE NCL_LoadErrorCodesToCache_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		DECLARE cQuery,ChannelQuery CHARACTER;

		SET cQuery = 'SELECT EXTERNAL_XREF_SUBDETAIL.EXTERNAL_CODE, EXTERNAL_XREF_SUBDETAIL.SW_CODE, REGEXP_REPLACE(EXTERNAL_XREF_SUBDETAIL.DESCRIPTION,''[^0-9A-Za-z %]'', '' '') AS DESCRIPTION , '||
			'TEMP_JOIN.EXTERNAL_TABLE,TEMP_JOIN.EXTERNAL_NAME, '''' AS LONG_DESCRIPTION, DETAILS.EXTERNAL_XREF_DETAIL_ID, DETAILS.EXTERNAL_XREF_ID'||
			' FROM SEA.EXTERNAL_XREF_DETAIL DETAILS' ||
			' INNER JOIN(SELECT XREF.EXTERNAL_XREF_ID, XREF.EXTERNAL_TABLE ,NAMES.EXTERNAL_NAME FROM SEA.EXTERNAL_XREF XREF' ||
			' INNER JOIN SEA.EXTERNAL_NAMES NAMES ON XREF.EXTERNAL_NAMES_ID = NAMES.EXTERNAL_NAMES_ID WHERE NAMES.EXTERNAL_NAME  IN ('||EXTERNAL_NAME ||'))'||
			' TEMP_JOIN ON DETAILS.EXTERNAL_XREF_ID = TEMP_JOIN.EXTERNAL_XREF_ID' ||
			' JOIN EXTERNAL_XREF_SUBDETAIL ON DETAILS.EXTERNAL_XREF_DETAIL_ID = EXTERNAL_XREF_SUBDETAIL.EXTERNAL_XREF_DETAIL_ID' ||
			' WHERE TEMP_JOIN.EXTERNAL_TABLE  IN ('||EXTERNAL_SUB_NAME ||')' ||
			'  AND DETAILS.SW_CODE IS NOT NULL'	;
		SET Environment.Variables.Temp.DB.SubCodes[] = PASSTHRU(cQuery);
		IF EXISTS(Environment.Variables.Temp.DB.*[]) THEN
			PROPAGATE TO TERMINAL 'out1';
		END IF ;
		--SET ChannelQuery = 'select * from SEA.EXTERNAL_NAMES';

		--SET Environment.externalNames.Channels[] = PASSTHRU(ChannelQuery);			
		--For rChannel AS Environment.externalNames.Channels[] DO
		SET Environment.Variables.Temp = NULL;
		SET cQuery = 'SELECT DETAILS.EXTERNAL_CODE, DETAILS.SW_CODE,REGEXP_REPLACE(DETAILS.DESCRIPTION,''[^0-9A-Za-z %]'', '' '') AS DESCRIPTION, '''' AS LONG_DESCRIPTION,'||
		'DETAILS.EXTERNAL_XREF_DETAIL_ID, DETAILS.EXTERNAL_XREF_ID,TEMP_JOIN.EXTERNAL_TABLE,TEMP_JOIN.EXTERNAL_NAME'||
		' FROM SEA.EXTERNAL_XREF_DETAIL DETAILS ' ||
		'INNER JOIN(SELECT XREF.EXTERNAL_XREF_ID, XREF.EXTERNAL_TABLE ,NAMES.EXTERNAL_NAME FROM SEA.EXTERNAL_XREF XREF ' ||
		'INNER JOIN SEA.EXTERNAL_NAMES NAMES ON XREF.EXTERNAL_NAMES_ID = NAMES.EXTERNAL_NAMES_ID WHERE NAMES.EXTERNAL_NAME IN ('||EXTERNAL_NAME ||'))'||
		'TEMP_JOIN ON DETAILS.EXTERNAL_XREF_ID = TEMP_JOIN.EXTERNAL_XREF_ID WHERE TEMP_JOIN.EXTERNAL_TABLE IN ('||EXTERNAL_TABLE ||')' ||
		' AND DETAILS.SW_CODE IS NOT NULL';
		SET Environment.Variables.Temp.DB.Codes[] = PASSTHRU(cQuery);
		IF EXISTS(Environment.Variables.Temp.DB.*[]) THEN
			PROPAGATE TO TERMINAL 'out1';
		END IF ;
		SET Environment.Variables.Temp.DB = NULL;
		--END FOR;

--		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

