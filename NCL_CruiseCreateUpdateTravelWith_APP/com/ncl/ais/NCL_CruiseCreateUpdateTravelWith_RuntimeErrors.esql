BROKER SCHEMA com.ncl.ais


CREATE COMPUTE MODULE NCL_CruiseCreateUpdateTravelWith_RuntimeErrors
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rExcp REFERENCE TO InputExceptionList;
		DECLARE rOrgMsg REFERENCE TO rEnv.Temp.Message.*:NCL_CruiseCreateUpdateTravelWithRQ;
		DECLARE rOut REFERENCE TO OutputRoot.XMLNSC.*:NCL_CruiseCreateUpdateTravelWithRS;

 		DECLARE cErrorText CHARACTER 'System error from back end. Please try again later';
 		
		-- extract error details from exception tree
		IF EXISTS(InputExceptionList.RecoverableException[]) THEN
			CALL com.ncl.iib.utils.getExceptionSummary(rEnv, rExcp);
			SET cErrorText = COALESCE(rEnv.ErrorSummary.ErrorText, '');
			
 		END IF;

		CREATE FIELD OutputRoot.XMLNSC.*:NCL_CruiseCreateUpdateTravelWithRS AS rOut;

		CALL com.ncl.ais.utils.CopyAttributes(rOrgMsg, rOut);
		
		SET rOut.*:Errors.*:Error.(XMLNSC.Attribute)Code = '12228';
		SET rOut.*:Errors.*:Error.(XMLNSC.Attribute)ShortText = 'System error from back end. Please try again later';
		SET rOut.*:Errors.*:Error.(XMLNSC.Attribute)Type = '3';
		SET rOut.*:Errors.*:Error = cErrorText;

 		PROPAGATE TO LABEL 'ROUTETOCALLER';
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
