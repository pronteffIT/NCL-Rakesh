BROKER SCHEMA com.ncl.ais


CREATE COMPUTE MODULE UnlockAndLogoutSession_UnlockTravelWith
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN		
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rOrgMsg REFERENCE TO rEnv.Temp.Message.*:NCL_CruiseCreateUpdateTravelWithRQ;
		DECLARE  rUnlockTWReq, rTWShell REFERENCE TO OutputRoot;
		DECLARE bFatalError BOOLEAN FALSE;
		DECLARE rTwAction CHARACTER '';		
		SET rTwAction = rEnv.TwAction;
		
--		IF UPPER(rTwAction) = 'ADD'
--		THEN
			-- set the endpoint of the VX server
		SET OutputRoot.HTTPRequestHeader."x-upstream" = rEnv.endPoint;
-- implement recursive unlocking.
			CREATE FIELD OutputRoot.XMLNSC.UnlockTW_IN AS rUnlockTWReq;	
			CALL com.ncl.ais.utils.CreateVersonixHeader(rEnv.SessionGUID,rUnlockTWReq);			
			SET rUnlockTWReq.TwID =	rEnv.Temp.TWID;									
		RETURN TRUE;
			
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
