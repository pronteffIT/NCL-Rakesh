BROKER SCHEMA com.ncl.ais


CREATE COMPUTE MODULE StoreTW_BuildResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv,rOut REFERENCE TO Environment.Variables;		
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.StoreTW_OUT;		
		DECLARE rOrgMsg REFERENCE TO rEnv.Temp.Message.*:NCL_CruiseCreateUpdateTravelWithRQ;			
		DECLARE bFatalError BOOLEAN FALSE;
		DECLARE rError REFERENCE TO rIn.Errors.Error[1];		
		WHILE LASTMOVE(rError) AND (NOT bFatalError) DO
			IF rError.ErrorSeverity = 'E' OR rError.ErrorSeverity = 'F' OR rError.ErrorSeverity = 'OPERATION'
			THEN
				SET bFatalError = TRUE;
			END IF;			
			MOVE rError NEXTSIBLING;
		END WHILE;	
		IF bFatalError = TRUE
		THEN
			CALL CopyEntireMessage();			
			PROPAGATE TO LABEL 'GENERIC_WARN';
			RETURN FALSE;
		END IF;	
		
		CREATE FIELD OutputRoot.XMLNSC.*:NCL_CruiseCreateUpdateTravelWithRS AS rOut;
		CALL com.ncl.ais.utils.CopyAttributes(rOrgMsg, rOut);
		CREATE FIELD rOut.Success;		
		PROPAGATE TO LABEL 'ROUTETOCALLER';
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
