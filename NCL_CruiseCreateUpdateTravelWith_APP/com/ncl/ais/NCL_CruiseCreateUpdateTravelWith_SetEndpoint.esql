BROKER SCHEMA com.ncl.ais

CREATE COMPUTE MODULE NCL_CruiseCreateUpdateTravelWith_SetEndpoint
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQMD.Format = MQFMT_RF_HEADER_2;
		SET rEnv.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		SET OutputRoot.MQRFH2.usr.Endpoint = Environment.Variables.Endpoint;
		
		IF EXISTS(InputRoot.BLOB.BLOB[]) THEN
			SET OutputRoot.BLOB.BLOB = InputRoot.BLOB.BLOB;
		ELSE
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		END IF;
		SET OutputRoot.XMLNSC.*:NCL_CruiseCreateUpdateTravelWithRS.(XMLNSC.Attribute)Endpoint = Environment.Variables.endPoint;
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
