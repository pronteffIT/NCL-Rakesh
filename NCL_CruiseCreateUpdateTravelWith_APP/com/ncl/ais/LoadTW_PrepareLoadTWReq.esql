BROKER SCHEMA com.ncl.ais


CREATE COMPUTE MODULE LoadTW_PrepareLoadTWReq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rOrgMsg REFERENCE TO rEnv.Temp.Message.*:NCL_CruiseCreateUpdateTravelWithRQ;
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.LoadBooking_OUT;
		DECLARE rOut, rOptions, rTwID,LockedTWs REFERENCE TO OutputRoot;
		DECLARE rLoadTWReq REFERENCE TO OutputRoot.XMLNSC.LoadTW_IN; 		
		DECLARE bFatalError BOOLEAN FALSE;
		DECLARE rError REFERENCE TO rIn.Errors.Error[1];		
		

				-- set the endpoint of the VX server
		SET OutputRoot.HTTPRequestHeader."x-upstream" = rEnv.endPoint;
		
		CREATE FIELD OutputRoot.XMLNSC.LoadTW_IN AS rLoadTWReq;	
				
		CALL com.ncl.ais.utils.CreateVersonixHeader(rEnv.SessionGUID,rLoadTWReq);			
		CREATE LASTCHILD OF rLoadTWReq as rOptions IDENTITY Options;
		SET rOptions.Lock = 'Y';			
		CREATE LASTCHILD OF rLoadTWReq as rTwID IDENTITY TwID;
		SET rTwID = rEnv.Temp.TWID;

		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
