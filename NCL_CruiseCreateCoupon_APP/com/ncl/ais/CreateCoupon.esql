BROKER SCHEMA com.ncl.ais
DECLARE ns NAMESPACE 'http://nclapi/schemas';
DECLARE DEFAULT_REPLYQ EXTERNAL CHARACTER 'NCL_CRUISE_CREATE_COUPON_RESP';
DECLARE MSG_EXPIRY EXTERNAL INTEGER 3000;
CREATE COMPUTE MODULE CreateCoupon
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.*:NCL_CruiseCreateCouponRQ;		
		DECLARE rCoupon REFERENCE TO rIn.*:Coupon;
		DECLARE rEnv REFERENCE TO Environment.Variables;
		SET rEnv.cpnReq = rIn; 
		
		
		Declare rClientId DECIMAL CAST(rCoupon.*:ClientID AS DECIMAL DEFAULT 0.0);
		Declare rCurrencyCd CHARACTER rCoupon.*:CurrencyCode;
		Declare rAmount DECIMAL CAST (rCoupon.*:Amount  AS DECIMAL(10,2) DEFAULT 0.00)/100;
		--Set amountLeft As Amount if not provided
		Declare rAmountLeft DECIMAL CAST (COALESCE(rCoupon.*:AmountLeft,rCoupon.*:Amount)  AS DECIMAL(10,2) DEFAULT 0.00)/100;
		Declare rCouponClass CHARACTER rCoupon.*:CouponClass;
		Declare rResId DECIMAL CAST(rCoupon.*:ResID AS DECIMAL(10,2) DEFAULT 0.0);
		Declare rComments CHARACTER rCoupon.*:Comments;
		Declare rOfficeCode CHARACTER rCoupon.*:OfficeCode;
		Declare rValidFrom  DATE  CAST(rCoupon.*:ValidFrom AS DATE FORMAT 'I');		
		Declare rValidTo  DATE  CAST(rCoupon.*:ValidTo AS DATE FORMAT 'I');
		Declare rEffectiveFrom  DATE  CAST(rCoupon.*:EffectiveFrom AS DATE FORMAT 'I');		
		Declare rEffectiveTo  DATE  CAST(rCoupon.*:EffectiveTo AS DATE FORMAT 'I');		
		Declare rChannel  CHARACTER COALESCE(FIELDVALUE(rIn.*:POS.*:Source.*:BookingChannel.*:CompanyName.(XMLNSC.Attribute)Code),'');
		Declare rTransIdentifier  CHARACTER COALESCE(FIELDVALUE(rIn.(XMLNSC.Attribute)TransactionIdentifier),'');
		Declare rRefTxt   CHARACTER COALESCE(rCoupon.*:Reference,rTransIdentifier);
		Declare rFileName   CHARACTER rCoupon.*:FileName;
		Declare rCouponId  DECIMAL;
		DECLARE rEntityType CHARACTER 'CLNT';
		DECLARE rErrorMsg   CHARACTER ;
		
		--Set ENV Headers
		SET rEnv.Temp.Headers.MQMD = InputRoot.MQMD;
		SET rEnv.Temp.Headers.MQMD.Expiry = MSG_EXPIRY;		
		-- set reply-to-q if not set
		IF COALESCE(InputRoot.MQMD.ReplyToQ, '') = '' THEN
			SET rEnv.Temp.Headers.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;		
		
		CALL ncl_ins_acc_coupon(rClientId,rEntityType,rCurrencyCd,rAmount,rAmountLeft,rCouponClass,
								rResId,rComments,rOfficeCode,rValidFrom,rValidTo,
								rEffectiveFrom,rEffectiveTo,rChannel,rRefTxt,rFileName,rCouponId,rErrorMsg);
		
		
		SET OutputRoot.MQMD = InputRoot.MQMD;
  		SET OutputRoot.MQMD.Expiry = MSG_EXPIRY;
		IF COALESCE(InputRoot.MQMD.ReplyToQ,'')='' THEN
			SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;
		DECLARE rOutResp REFERENCE TO Environment.Variables;		
		CREATE FIELD OutputRoot.XMLNSC.ns:NCL_CruiseCreateCouponRS AS rOutResp;
		IF COALESCE(rErrorMsg,'')<> '' THEN
			SET rOutResp.ns:Warnings.ns:Warning = rErrorMsg;
			SET rOutResp.ns:Warnings.ns:Warning.(XMLNSC.Attribute)Code = '25074';
			SET rOutResp.ns:Warnings.ns:Warning.(XMLNSC.Attribute)ShortText = 'Error while creating Coupon';
			SET rOutResp.ns:Warnings.ns:Warning.(XMLNSC.Attribute)Type = '3';
		ELSE
			CREATE FIELD rOutResp.ns:Success;
			SET rOutResp.ns:CouponID =  rCouponId; 		
		END IF; 			 						
		RETURN TRUE;
	END;		
	
	
	CREATE PROCEDURE ncl_ins_acc_coupon( 
	 	IN p_entity_id DECIMAL,
	    IN p_entity_type  CHARACTER,
	    IN p_currency_code  CHARACTER,
	    IN p_amount DECIMAL,
	    IN p_amount_left   DECIMAL,
	    IN p_coupon_class  CHARACTER,
	    IN p_res_id   DECIMAL,
	    IN p_comments    CHARACTER,
	    IN p_office_code  CHARACTER,
	    IN p_valid_from   DATE,
	    IN p_valid_to     DATE,
	    IN p_effective_from  DATE,
	    IN p_effective_to   DATE,
	    IN p_channel   CHARACTER,
	    IN p_ref_txt      CHARACTER,
	    IN p_filename_txt  CHARACTER,
	    OUT p_coupon_id DECIMAL,
	    OUT p_err_msg      CHARACTER
	)
	LANGUAGE DATABASE EXTERNAL NAME "NCLSEA.NCL_INS_ACC_COUPON";		
END MODULE;

CREATE COMPUTE MODULE CreateCoupon_HandleException
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN		
		DECLARE rExcp REFERENCE TO InputExceptionList;
		DECLARE rEnv,rOutResp REFERENCE TO Environment.Variables;
		IF NOT EXISTS(Environment.Variables[]) THEN
			CREATE FIELD Environment.Variables AS rEnv;
		END IF;
		
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		IF EXISTS(rEnv.Temp.Headers.MQMD[]) THEN
			SET OutputRoot.MQMD = rEnv.Temp.Headers.MQMD;
		END IF;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIELD OutputRoot.XMLNSC.ns:NCL_CruiseCreateCouponRS AS rOutResp;
		CALL com.ncl.ais.utils.CopyAttributes(rEnv.cpnReq,rOutResp);  					
			
		IF EXISTS(InputExceptionList.RecoverableException[]) THEN
			CALL com.ncl.iib.utils.getExceptionSummary(rEnv, rExcp);
		END IF;

		DECLARE cErrorText CHARACTER COALESCE(rEnv.ErrorSummary.ErrorText, 'Internal IIB Error, please check the logs');

		SET rOutResp.ns:Errors.ns:Error = cErrorText;
		SET rOutResp.ns:Errors.ns:Error.(XMLNSC.Attribute)Code = '12228';
		SET rOutResp.ns:Errors.ns:Error.(XMLNSC.Attribute)ShortText = 'System error from back end. Please try again later';
		SET rOutResp.ns:Errors.ns:Error.(XMLNSC.Attribute)Type = '3';	
		RETURN TRUE;		
	END;	
END MODULE;


CREATE COMPUTE MODULE ProcessSFCpnFile
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rIn REFERENCE TO OutputRoot.DFDL.SFCouponImport;
		DECLARE rClientId DECIMAL;
		FOR r AS rIn.record[] 
		DO
			SET rClientId = CAST (r.client AS DECIMAL);
		END FOR;				
	END;
END MODULE;
