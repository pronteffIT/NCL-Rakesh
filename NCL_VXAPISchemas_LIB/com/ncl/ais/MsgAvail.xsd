<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
	attributeFormDefault="unqualified">
	<xs:include schemaLocation="GroupShell.xsd"/>
	<xs:complexType name="AvailCarDeck">
		<xs:annotation>
			<xs:documentation>Total element for the GetAvailCarDeck_OUT message</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="TotalMeters" type="xs:double" minOccurs="0"/>
			<xs:element name="TotalUnits" type="xs:double" minOccurs="0"/>
			<xs:element name="UsedMeters" type="xs:double" minOccurs="0"/>
			<xs:element name="UsedUnits" type="xs:double" minOccurs="0"/>
			<xs:element name="AvailMeters" type="xs:double" minOccurs="0"/>
			<xs:element name="AvailUnits" type="xs:double" minOccurs="0"/>
			<xs:element name="CargoMeters" type="xs:double" minOccurs="0"/>
			<xs:element name="CargoUnits" type="xs:double" minOccurs="0"/>
			<xs:element name="CargoMetersWtl" type="xs:double" minOccurs="0"/>
			<xs:element name="CargoUnitsWtl" type="xs:double" minOccurs="0"/>
			<xs:element name="AllocsOk" type="Count" minOccurs="0"/>
			<xs:element name="AllocsWtl" type="Count" minOccurs="0"/>
			<xs:element name="CargoAllocsOk" type="Count" minOccurs="0"/>
			<xs:element name="CargoAllocsWtl" type="Count" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="AvailCategory">
		<xs:annotation>
			<xs:documentation>Category element from the GetAvailCategories_OUT message</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="Ship" type="ShipCode">
				<xs:annotation>
					<xs:documentation>Ship code.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Category" type="CabinCategoryCode">
				<xs:annotation>
					<xs:documentation>Price cabin category.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SharedOccupancy" type="Occupancy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated when availability call requests shared cabins. There could could be several nodes with the same Category but different SharedOccupancy.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SharedGenders" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated only in GetAvailPrimPkgsCustom_OUT. Indicates availability of gender restricted cabins. If omitted - no gender restrications are present.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="Gender"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Rank" type="Rank">
				<xs:annotation>
					<xs:documentation>Cabin category rank.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Capacity" type="CabinCapacity">
				<xs:annotation>
					<xs:documentation>Max capacity among cabins in that category.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxAvailableCapacity" type="CabinCapacity" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Max available capacity among cabins in that category. Populated when availability result not worse then GTY for not Shared availability (SharedOccupancy node is absent)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasRollaway" type="Boolean">
				<xs:annotation>
					<xs:documentation>Set to 'Y' if at least one of the cabins in that category has rollaway bed or crib.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cabin category description.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InGroup" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be set to 'Y' only in case when a) GroupID was set in the ResHeader element and b) there was unused space in the group pool for this category.</xs:documentation>
					<xs:documentation>or also (in 040808 only): For some External Systems RQ space is supposed to be reported in search, then the item shows RQ availability. </xs:documentation>
					<xs:documentation>The RQ space is included by a setting UseFSGroupSpaceInSearchMode (ENVIRONMENT) with possible values USE_GROUP_SPACE_FIRST or USE_GROUP_SPACE_LAST.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChildBeds" type="Count" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupEffDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If InGroup is set to 'Y' then this element contains effective date of the corresponding group request. That effective date can be then "legally" used in ResPackage elements for this package/category.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Availability" type="AvailabilityResult">
				<xs:annotation>
					<xs:documentation>Cumulative availability result for this category. Determined as worst availability result among all resources, which will be used if this category is booked. For example, for packages with mandatory hotel components, if only certain hotels are allowed for certain categories, unavailability of these hotels may result in unavailability of these categories.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RollawayAvailability" type="AvailabilityResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>estimated inventory result with assumption that booking requested rollaways</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipAvailability" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ship availability details. </xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="NofCabins" type="xs:nonNegativeInteger">
							<xs:annotation>
								<xs:documentation>Total number of cabins in this category.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Result" type="AvailabilityResult" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Estimated inventory result for current bkng in this category</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AvailCabins" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number of unassigned cabins. Can be set to 99999, which means 'plenty of space', depending on cruise line security settings.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:totalDigits value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="NofReserved" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number of reserved cabins.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:totalDigits value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="AvailReserved" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number of unassigned reserved cabins.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:integer">
									<xs:totalDigits value="5"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="UsageTotals" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Not provided to external applications.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Usage" type="InventoryUsage" minOccurs="0"
										maxOccurs="3">
										<xs:annotation>
											<xs:documentation>Contains totals for each of the following result types - OK, GTY and WTL.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="AvailabilityTotals" type="AvailabilityTotals"
							minOccurs="0"/>
						<xs:element name="PartialSharedCabins" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Availability of partial shared cabin</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Common" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:documentation>shared cabin "common"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Male" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:documentation>shared cabin "male"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Female" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:documentation>shared cabin "female"</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="AllotmentTotals" minOccurs="0">
							<xs:complexType>
								<xs:all>
									<xs:element name="AgreementID" type="RecordID">
										<xs:annotation>
											<xs:documentation>ID of the Allotment agreement, which was used to find actual allotment for given sail/category</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NofCabins" type="xs:integer">
										<xs:annotation>
											<xs:documentation>Total # of cabins in the allotment in that category</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AvailCabins" type="AvailabilityTotals"/>
									<xs:element name="Result" type="AvailabilityResult">
										<xs:annotation>
											<xs:documentation>Inventory result within the allotment</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="GuestDistribution" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated only when DistributeGuests is set to 'Y' in search options. Shows which guest was assigned to which cabin by the program.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Cabin" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CabinSeqN" type="CabinSeqN"/>
									<xs:element name="GuestRefs" type="GuestRefs"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PriceTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This element is not present if CalcPrices was set to 'N' in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceTotal" type="Money">
							<xs:annotation>
								<xs:documentation>Total price of the booking if this package/category is selected.</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="DiscountTotal" type="Money">
							<xs:annotation>
								<xs:documentation>Total amount of applied discounts due to promotions or other factors, for example, guest ages, participation in certain programs, back-to-back voyages, exclusion of non-mandatory package components, etc.</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>ToBeImplemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="QuotePriceTotal" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Total Quote price of the booking if this package/category is selected.</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="QuoteDiscountTotal" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>ToBeImplemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="GuestTotal" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="GuestSeqN" type="GuestSeqN">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="PriceTotal" type="Money">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="DiscountTotal" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="QuotePriceTotal" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PriceDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This element is only present if CalcPrices and PriceDetails were set to 'Y' in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceItem" type="PriceItem" minOccurs="0"
							maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UsedPromos" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes promotions used for category price calculation. This element is only present if CalcPrices and PriceDetails were set to 'Y' in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PromoItem" type="PromoItem" minOccurs="0"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UpgradePromos" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes available upgrade promotions. This element is only present if CalcPrices and PriceDetails were set to 'Y' in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PromoItem" type="PromoItem" minOccurs="0"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="BestUpgrade" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="PromoCode" type="PromotionCode">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="CabinCategory" type="CabinCategoryCode">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="AvailUpgrades" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number of available upgrades (weighted)</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Points" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Points that can be used to cover some or full invoice amount for bookings. This element is only present if CalcPrices was set to 'Y' in the input message. In 040808 version used to pass Amenity Value, with '$amenity_program' as Point Type, and both Quantity and Discount corresponding to coupon amount.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Type" type="PointType"/>
						<xs:element name="Quantity" type="xs:double"/>
						<xs:element name="Discount" type="Money"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="CanBookCabins" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>min (abs_max_of_cabins, avl_in_inventory) where
abs_max_of_cabins: cabins_qty_in_this_category minus cabins_qty_already_booked_by_the_res
avl_in_inventory: trunc(wgt_avl / res_probability). This value is calculated without considering nested categories.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CanBookNestedCabins" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Similar to CanBookCabins, but also considers nested categories.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Addons" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated when CalcMandatoryAddons = 'Y' in the input message or there are add-ons that are linked to promotions.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Addon" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="AddonCode" type="AddonCode"/>
									<xs:element name="GuestRefs" type="GuestRefs"/>
									<xs:element name="PromoCode" type="PromotionCode" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Promotion which this add-on is linked to.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Price" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Total price of the add-on.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="GuestTotal" minOccurs="0"
										maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="GuestSeqN" type="GuestSeqN">
												<xs:annotation>
												<xs:appinfo source="Versonix">
															<XMLBridge>Implemented</XMLBridge>
														</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="Price" type="Money">
												<xs:annotation>
												<xs:appinfo source="Versonix">
															<XMLBridge>Implemented</XMLBridge>
														</xs:appinfo>
												</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Labels" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Label" type="LongCode" minOccurs="0" maxOccurs="unbounded"
						/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CategoryAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Impemented in 041113 only.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CategoryAttribute" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Code" type="LongCode"/>
									<xs:element name="Value" type="LongCode"/>
									<xs:element name="Values" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Populated for multi-valued attributes</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Value" type="LongCode"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="AvailDiningTotals">
		<xs:annotation>
			<xs:documentation>Total element for the GetAvailDining_OUT message</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="Total" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Total # of tables (or seats) in the restaurant</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvlBase" type="xs:double">
				<xs:annotation>
					<xs:documentation># of available base tables (or seats of the base tables)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvlParty" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation># of available base tables (or seats of the base tables), which will accommodate the whole party.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsageTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>May not be provided to external applications.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Abs" type="xs:integer">
							<xs:annotation>
								<xs:documentation>Total number of requests </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Wgt" type="xs:double">
							<xs:annotation>
								<xs:documentation>Weighted number of requests.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="AvailSecondaryPkg">
		<xs:annotation>
			<xs:documentation>Available Land Package/Shore Excursion (see GetAvailLandPackages_OUT/GetAvailShorex_OUT)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
					<xs:documentation>Can be missing (empty) if package was rejected for all guests.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Definition" type="PkgDefinition">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Route" type="GenericRoute" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
					<xs:documentation>Populated for Transfer packages. One of the possible routes defined by the package, which fits search criteria.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Currency" type="CurrencyCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Currency of the availability booking</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceTotals" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PriceTotal" type="Money">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>ToBeImplemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceInc" type="Money">
							<xs:annotation>
								<xs:documentation>Booking price increment.</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>ToBeImplemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="GuestTotal" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="GuestSeqN" type="GuestSeqN">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="PriceTotal" type="Money">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="PriceInc" type="Money">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Availability" type="AvailabilityResult" minOccurs="0"/>
			<xs:element name="Rejection" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains rejection reasons - why this package is not available for a particular quest.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="GuestRefs" type="GuestRefs">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>ToBeImplemented</XMLBridge>
								</xs:appinfo>
								<xs:documentation>Guests to whom the following rejection reason applies.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Code">
							<xs:simpleType>
								<xs:restriction base="Code">
									<xs:enumeration value="MainPkg">
										<xs:annotation>
											<xs:documentation>package conflicts with primary package(s)</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="SecPkg">
										<xs:annotation>
											<xs:documentation>package conflicts with some other land/shorex packages</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="Location">
										<xs:annotation>
											<xs:documentation>package does not connect with guest's itinerary</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="Hole">
										<xs:annotation>
											<xs:documentation>if this package is selected it will make a hole in guest itinerary</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="SellLim">
										<xs:annotation>
											<xs:documentation>selling limits are exhausted</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="BuildError">
										<xs:annotation>
											<xs:documentation>there was an internal error</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ConfictingComponent" type="ComponentReference"
							minOccurs="0">
							<xs:annotation>
								<xs:documentation>A package or hotel on the booking that conflicts with the available package (if it can be calculated).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Explanation" type="xs:string" minOccurs="0"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AssumedCoupon">
		<xs:annotation>
			<xs:documentation>Specific parameters of the zero-priced coupon applied to the projected components found during the search.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CouponClass" type="CouponClass"/>
			<xs:element name="VacationRange" type="DateRange"/>
			<xs:element name="ApplicabilityRange" type="DateRange"/>
			<xs:element name="OfficeCode" type="OfficeCode" minOccurs="0"/>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Set of guests for which coupon application will be performed; default = all guests.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApplyToCar" type="Boolean" default="Y" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If Y then coupon will be applied for the projected cardeck component (if any) </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PriceItem">
		<xs:annotation>
			<xs:documentation>Individual price item</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="GuestSeqN" type="GuestSeqN">
					<xs:annotation>
						<xs:documentation>Guest seq. number. Populated if CombineGuests=N in the input message</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="GuestRefs" type="GuestRefs">
					<xs:annotation>
						<xs:documentation>Populated if CombineGuests=Y in the input message</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="Code" type="PriceItemCode">
				<xs:annotation>
					<xs:documentation>Price item code. Examples: 'VOYAGE FARE', 'INSURANCE', 'AIR SUPPLEMENT', etc. Also see the PriceItemCode type description. Contains Invoice Item Type code if GroupingCode is 'nil' in the input message.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money">
				<xs:annotation>
					<xs:documentation>Always in the booking currency. If CombineGuests=Y contains total amount for all guests in GuestRefs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountPerGuest" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Always in the booking currency. Populated only if CombineGuests=Y.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SortSeqN" type="SeqNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Suggested sequence number for showing (sorting) of the invoice.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PromoItem">
		<xs:annotation>
			<xs:documentation>Describes used or available promotion in the GetAvailCategory_OUT message</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PromoCode" type="PromotionCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromoDescription" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>040808 and 041113 versions only!</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Upgrade" type="CabinCategoryCode" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>For upgrade promotions only - defines possible values for BerthCategory if this promotion applied to the booking.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PricePromoGroup" type="LongCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>040808 version only! Signals that the promo is the Collection producing one.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmenityPromoGroup" type="LongCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>040808 version only! Signals that the promo is the Collection producing one.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailQty" type="Count" minOccurs="0">
				<xs:annotation>
					<xs:documentation>040808 version only! Promo selling limit restriction (the available count of similar reservations) for a Collection promo.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailWgt" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>040808 version only! Weighted promo selling limit restriction (the available count of similar reservations) for a Collection promo.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SellingLimits">
		<xs:annotation>
			<xs:documentation>Selling Limit Queue header data</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="Sell" minOccurs="0">
				<xs:complexType>
					<xs:all>
						<xs:element name="Abs" type="xs:integer" minOccurs="0"/>
						<xs:element name="Wgt" type="xs:double" minOccurs="0"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Wait" minOccurs="0">
				<xs:complexType>
					<xs:all>
						<xs:element name="Abs" type="xs:integer" minOccurs="0"/>
						<xs:element name="Wgt" type="xs:double" minOccurs="0"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Warn" minOccurs="0">
				<xs:complexType>
					<xs:all>
						<xs:element name="Abs" type="xs:integer" minOccurs="0"/>
						<xs:element name="Wgt" type="xs:double" minOccurs="0"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="StopSell" type="Boolean"/>
			<xs:element name="SellStoppedAt" type="xs:dateTime" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="CarDeckAllocation">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="Owner">
				<xs:complexType>
					<xs:choice>
						<xs:element name="ResID" type="RecordID"/>
						<xs:element name="GroupID" type="RecordID"/>
						<xs:element name="CargoID" type="RecordID"/>
						<xs:element name="Operator" type="OracleUsername"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime"/>
			<xs:element name="Result" type="InventoryResult"/>
			<xs:element name="DeckNumber" type="DeckNumber" minOccurs="0"/>
			<xs:element name="Length" type="CarDimension" minOccurs="0"/>
			<xs:element name="Width" type="CarDimension" minOccurs="0"/>
			<xs:element name="Weight" type="CarWeight" minOccurs="0"/>
			<xs:element name="Height" type="CarDimension" minOccurs="0"/>
			<xs:element name="CarPriceCategory" type="CarPriceCategory" minOccurs="0"/>
			<xs:element name="CargoType" type="LongCode" minOccurs="0"/>
			<xs:element name="Railway" type="Boolean" default="N" minOccurs="0"/>
			<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:simpleType name="CacheSearchMode">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="ReadCacheOnly">
				<xs:annotation>
					<xs:documentation>data is taken from cache only</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReadCacheFirst">
				<xs:annotation>
					<xs:documentation>if data is not found in cache - then it is calculated</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PopulateCacheOnly">
				<xs:annotation>
					<xs:documentation>populates cache if needed, no result set is expected</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PopulateCache">
				<xs:annotation>
					<xs:documentation>populates cache if needed and gets result</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ForcePopulateCacheOnly">
				<xs:annotation>
					<xs:documentation>forced cache (re)population, no result set is expected</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ForcePopulateCache">
				<xs:annotation>
					<xs:documentation>forced cache (re)population, gets result</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BypassCache">
				<xs:annotation>
					<xs:documentation>just process equvalent availability calls</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DropCache">
				<xs:annotation>
					<xs:documentation>Notification call: the related part of cache is to be dropped</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="GetAvailCabins_IN">
		<xs:annotation>
			<xs:documentation>Input message for the cabin availability request. It works in two modes: reservation (when ResShell/ResShellRef is set) or sail (when Sail is set).</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="ReturnPartialCabins" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Not implemented.              If 'Y' - the response will also include cabins, which are available only for a portion of the sailing.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ReturnFreeCabins" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Only for the Sail mode.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ReturnAllocatedCabins" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Only for the Sail mode.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ExtendedOccupancyInfo" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Works only for the Sail mode when ReturnAllocatedCabins = 'Y'. The response will include additional information about guests in cabins.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchParams" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="CabinSeqN" type="xs:nonNegativeInteger" default="1"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Ignored in Sail mode. The element value should correspond to an existing ResShipRequest element, for which cabin selection is being performed. Must be set in reservation mode if there is more than one requested cabin.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CabinAttribute" minOccurs="0" maxOccurs="unbounded"
								type="CabinAttribute">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Category" type="CabinCategoryCode" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:group ref="ResOrCargoShellForAvailability">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:group>
					<xs:element name="Sail" type="SailRange">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>ToBeImplemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailCabins_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the cabin selection request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="Sail" type="SailRange" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailCabins" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailCabin" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="CabinNumber" type="CabinNumber">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Ship" type="ShipCode">
											<xs:annotation>
												<xs:documentation>Ship code</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Category" type="CabinCategoryCode">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Capacity" type="CabinCapacity">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Deck" type="DeckNumber">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Rollaways" type="xs:nonNegativeInteger">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Rank" type="Rank" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="InGroup" type="Boolean" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Can be set to 'Y' only in case when a) GroupID was set in the ResHeader element and b) this cabin is allocated to the group, but is not assigned to any of the delegates yet.</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="AvailDates" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Populated only if ReturnPartialCabins = 'Y' in the input message. Not implemented</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
												<xs:element name="AvailRange" type="DateRange"
												minOccurs="0" maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="ReserveType" type="CabinReserveType"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="MayAssign" type="Boolean" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Populated for reserved cabins. Shows if the cabin allows assignment.</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="SharedCabin" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Populated only for shared cabins</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element name="Gender" type="GenderU"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Gender restriction in this cabin based on current assignments. 'U' means 'UniSex' (no restrictions). Missing value is different from 'U' and means gender restriction is not known or cannot be determined.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="MaxOccupancy" type="Occupancy">
												<xs:annotation>
												<xs:documentation>Max Ocuppancy taken from ship request of the first booking assigned to this cabin.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="Occupancy" type="Occupancy">
												<xs:annotation>
												<xs:documentation>Current number of passengers assigned to this cabin.</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:all>
											</xs:complexType>
										</xs:element>
										<xs:element name="Guests" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Populated when ExtendedOccupancyInfo = 'Y' in the request</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
												<xs:element name="CabinGuest" minOccurs="0"
												maxOccurs="unbounded">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="SeqN" type="SeqNumber">
												<xs:annotation>
												<xs:documentation>Calculated internally. Can be reference by ResponsibleGuest node.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="CheckedIn" type="Boolean"/>
												<xs:element name="Gender" type="Gender"
												minOccurs="0"/>
												<xs:element name="AgeCategory" type="AgeCategory"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Stored age category of the guest. Might not necessarily be equal to the age category of the guest on this sailing.
</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:choice minOccurs="0">
												<xs:element name="ChildBed" type="Boolean"/>
												<xs:element name="WithoutBed" type="Boolean"/>
												</xs:choice>
												<xs:element name="BerthNumber" type="SeqNumber"
												minOccurs="0"/>
												<xs:element name="ParentGuestSeqN"
												type="SeqNumber" minOccurs="0">
												<xs:annotation>
												<xs:documentation>SeqN of "parent" guest (if in the same cabin).</xs:documentation>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="UserMayRequestCabin" type="Boolean" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Indicates if a specific cabin number can be requested by the user. Populated only when requested for a cabin on the booking.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailCategories_IN">
		<xs:annotation>
			<xs:documentation>Input message for the cabin category availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="PackageID" type="RecordID">
								<xs:annotation>
									<xs:documentation>Package ID, for example, one of the packages returned by the GetAvailPrimPackage_OUT message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Sail" type="SailRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Should be specified for custom segments</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IsRollawayAcceptable" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="SharedCabin" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="Gender" type="GenderU" minOccurs="0"/>
										<xs:element name="MaxOccupancy" type="Occupancy"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="ReserveType" type="CabinReserveType" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ChildBeds" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Promotions" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of promotion codes, anyone of which should be available for a package to be acceptable.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PromoCode" type="PromotionCode"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PriceRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Acceptable range for package price.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Min" type="Money" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Max" type="Money" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AgreementID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Allotment Agreement ID to be used in the search.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="WithinAgreement" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - the search will be restricted to the allotment agreement defined by AgreementID</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CarAgreementID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Allotment Agreement ID for Car to be used in the search.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CarWithinAgreement" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - the search will be restricted to the allotment agreement defined by CarAgreementID</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="DynamicPackage" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If set, calculations will be done with assumption that the result will become a part of Dynamic Package.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Name" type="DynPkgName"/>
										<xs:element name="SeqN" type="Count">
											<xs:annotation>
												<xs:documentation>Zero-based (as in ResShell).</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CategoryAttributes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Implemented in 041113 only. Only categories that have requested attributes will be returned.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="CategoryAttribute" type="CodeValuePair"
											minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CabinNumber" type="CabinNumber" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Impemented in 041113 only. Only one category, which includes the requested cabin, will be returned (if available).</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Coupon" type="AssumedCoupon" minOccurs="0"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0">
								<xs:annotation>
									<xs:documentation>OK - return only categories where cabins are available, GTY- return categories where cabins or guarantees are available, WTL - same as GTY plus categories which have open waitlist, ALL - returns all categories.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcPrices" type="Boolean" default="Y" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' price related elements on the response message are not provided, which shortens response time.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PriceOptions" minOccurs="0">
								<xs:complexType>
									<xs:all>
										<xs:element name="PackageClasses" minOccurs="0">
											<xs:annotation>
												<xs:documentation>List of Package Classes to include in Total Price. The default is VOYAGE and CARDECK </xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
												<xs:element name="PackageClass" type="PkgClass"
												minOccurs="0" maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="PriceDetails" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - the PriceDetails element will be provided in the response message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ExcludeOccupancy" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - reservation occupancy is ignored - it is not compared to category capacity.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PriceDetailsGrouping" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="GroupingCode" type="Code"
											default="DISPLAY" nillable="true" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Corresponds to the INV_ITEM_GROUP_MATCH.INV_ITEM_GROUP column. If set to 'nil' - invoice items will be grouped by their INVOICE_ITEM_TYPE.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="CombineGuests" type="Boolean" default="N"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If 'Y' PriceItem will have a different structure in the output message - see PriceItem type definition.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ReturnSharedAvailability" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - availability for shared cabins (all possible occupancies) is calculated.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="UseShipAvailCache" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If Y - cached results of ship server availability requests are used to produce the response. The cache data lifetime is controlled by the ShipAvailDataExpiration Seaware setting.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcMandatoryAddons" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - mandatory add-ons will be built and included into calculation of cabin price. If the node is absent, the behavior will be determined by a system-wide setting.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="DistributeGuests" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If Y - the system will simulate booking of multiple cabins in a category to accomodate all guests and perform automatic guest distribution into these cabins. After that the price will be calculated for each of the guests. This option can be used, for example, to get prices for all guests for deck categories (Capacity=1). Otherwise the system returns prices of guests with seq number &lt;= Capacity.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice minOccurs="0">
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:documentation>If neither ResShellRef nor ResShell is present, system will use internal defaults to create the shell, which will be used by the search, for example, normally it will have two 'no-name' adults in the party. Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailCategories_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the cabin category availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailCategories" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailCategory" type="AvailCategory" minOccurs="0"
								maxOccurs="unbounded">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailCoupons_IN">
		<xs:annotation>
			<xs:documentation>Returns a list of coupons that are eligible to be applied to the reservation</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="ShowAll" type="Boolean" default="Y" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Y: all coupons will be shown even if applicable amounts are equal to zero (not used if ResID is not provided)</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchParams">
					<xs:complexType>
						<xs:all>
							<xs:element name="CouponIDFrom" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Coupons with CouponID greater or equal the specific value</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="CouponIDTo" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Coupons with CouponID less or equal the specific value</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="UserDefinedCouponIDs" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of user defined coupon IDs</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:list itemType="LongCode"/>
								</xs:simpleType>
							</xs:element>
							<xs:element name="CouponClass" type="CouponClass" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Coupons of the specific coupon class</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ActiveOnly" type="Boolean" default="Y" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Only ACtive coupons will be returned</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Owner" minOccurs="0">
								<xs:complexType>
									<xs:choice>
										<xs:element name="AgencyID" type="RecordID">
											<xs:annotation>
												<xs:documentation>Coupons owned by the specific agency</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ClientID" type="RecordID">
											<xs:annotation>
												<xs:documentation>Coupons owned by the specific client or granted to the specific client</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:choice>
								</xs:complexType>
							</xs:element>
							<xs:element name="OfficeCode" type="OfficeCode" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Coupons belong to the specific office code</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ForPayment" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Y: coupons that can be used for payments; N: coupons that can be used as discountsl default: all coupons</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ResID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If provided, applicable amount will be caqlculated; if ShowAll = N, only coupons with ApplAmount > 0 will be returned
									If no Owner or Id range parameters are supplied, then ResID will be used for filtering Result by possible Client or Agency owners </xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailCoupons_OUT">
		<xs:annotation>
			<xs:documentation>Response message for GetAvailCoupons_IN</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:element name="Coupons" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Coupon" type="CouponShell" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="DiningAvailType">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="PREMIUM"/>
			<xs:enumeration value="STANDARD"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="GetAvailDinings_IN">
		<xs:annotation>
			<xs:documentation>Input message for the dining availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Ship" type="ShipCode" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:choice minOccurs="0">
								<xs:sequence>
									<xs:element name="DateRange" type="DateRange">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="TimeOfDay" type="TimeRange">
										<xs:annotation>
											<xs:documentation>Applies to each of the day from the 'Dates' range.</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<xs:element name="DateTimeRange" type="DateTimeRange">
									<xs:annotation>
										<xs:documentation>ContiniousPeriod search</xs:documentation>
										<xs:appinfo source="Versonix">
											<XMLBridge>Implemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
							</xs:choice>
							<xs:element name="PartySize" type="xs:positiveInteger" default="2"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If not set - system will assume 'all guests of the ResShell below'. If ResShell is not supplied - the default is 2.
											  Party Size is not used for search of "STANDARD" dinings
									</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Duration" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>interval in minutes</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Restaurants" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Code" type="FacilityCode" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Attributes" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Code" type="DiningAttrCode" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MultiTable" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Default value is N</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="SittingsOff" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>'Y': predefined sitting time does not apply (custom time can be used). Default value is N</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="BookMode" type="PkgBookMode" minOccurs="0">
								<xs:annotation>
									<xs:documentation>PRE-BOOK or PRE-SELL. 040808 version only!</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="DiningType" type="DiningAvailType" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Standard or Premium dining, if omitted returns both</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="CalcGuestPrices" type="Boolean" default="N"
								minOccurs="0"/>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:choice minOccurs="0">
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
							<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailDinings_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the dining availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailDinings" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailDining" minOccurs="0" maxOccurs="unbounded"
								type="AvailDining">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailGateways_IN">
		<xs:annotation>
			<xs:documentation>Input message for the gateway availability request. Used for Bundled Air only! For reatil air see MsgAir.xsd.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:element name="SearchParams">
					<xs:complexType>
						<xs:all>
							<xs:element name="Country" type="CountryCode" minOccurs="0"/>
							<xs:element name="City" type="CityCode" minOccurs="0"/>
							<xs:element name="State" type="StateCode" minOccurs="0"/>
							<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Guests, for which the gateway lookup is performed. Default - first guest.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="CalcPrices" type="Boolean" default="N" minOccurs="0"/>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:choice minOccurs="0">
					<xs:element name="ResShellRef" type="RecordID"/>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailGateways_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the gateway availability request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:element name="AvailGateways" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailGateway" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:all>
										<xs:element name="Gateway" type="AirportCode"/>
										<xs:element name="Name" type="AirportName" minOccurs="0"/>
										<xs:element name="City" type="CityCode" minOccurs="0"/>
										<xs:element name="CityName" type="CityName" minOccurs="0"/>
										<xs:element name="Country" type="CountryCode" minOccurs="0"/>
										<xs:element name="CountryName" type="CountryName"
											minOccurs="0"/>
										<xs:element name="Prices" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Populated only if CalcPrices=Y in the input message.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element name="Total" type="Money"/>
												<xs:element name="BundledTotal" type="Money"/>
												<xs:element name="Guests" minOccurs="0">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="PriceItem" minOccurs="0"
												maxOccurs="unbounded">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="GuestSeqN" type="GuestSeqN"/>
												<xs:element name="Price" type="Money"/>
												<xs:element name="BundledPrice" type="Money"/>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												</xs:all>
											</xs:complexType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailHotels_IN">
		<xs:annotation>
			<xs:documentation>Input message for the hotel availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:choice>
					<xs:element name="RoomSeqN" type="HotelRoomSeqN">
						<xs:annotation>
							<xs:documentation>Refers to a ResRoomRequest element, for which available hotels are going to be determined.</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>ToBeImplemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SearchParams">
						<xs:complexType>
							<xs:all>
								<xs:element name="Stay" type="DateRange">
									<xs:annotation>
										<xs:appinfo source="Versonix">
											<XMLBridge>ToBeImplemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
								<xs:element name="City" type="CityCode">
									<xs:annotation>
										<xs:appinfo source="Versonix">
											<XMLBridge>Implemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
								<xs:element name="HotelCode" type="HotelCode" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="Versonix">
											<XMLBridge>Implemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
								<xs:element name="HotelCategory" type="HotelCategory" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="Versonix">
											<XMLBridge>ToBeImplemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
								<xs:element name="RoomType" type="HotelRoomType" minOccurs="0"/>
								<xs:element name="RoomCategory" type="HotelRoomCategory"
									minOccurs="0"/>
								<xs:element name="DynamicPackage" minOccurs="0">
									<xs:annotation>
										<xs:documentation>If set, calculations will be done with assumption that the result will become a part of Dynamic Package.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Name" type="DynPkgName"/>
											<xs:element name="SeqN" type="Count">
												<xs:annotation>
												<xs:documentation>Zero-based (as in ResShell).</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:all>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0"/>
							<xs:element name="IncludeRoomTypes" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - populate availability and prices on room type level.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeSuites" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'y' - include suites too (only if IncludeRoomTypes = 'Y').</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ExcludeOccupancy" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>To be able to get list of all available hotels regardless of reservation occupancy</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
							<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailHotels_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the hotel availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailHotels" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailHotel" minOccurs="0" maxOccurs="unbounded"
								type="AvailHotel">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailLandPackages_IN">
		<xs:annotation>
			<xs:documentation>Input message for the secondary package availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="MatchItinerary" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If provided, PackageStarteRange and PackageEndRange will be ignored</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageStartRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package start.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageEndRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package end.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageLenRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Min and max acceptable package length.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Min" type="xs:positiveInteger"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Max" type="xs:positiveInteger"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Cities" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of acceptable city codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="City" type="CityCode" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="InitialStatus" type="PkgStatus" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PrePostMode" type="PrePostMode" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ProductTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible product type codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ProductType" type="ProductType"
											minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PackageTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible package type codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PackageType" type="PkgType" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PackageCodes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible package codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PackageCode" type="PkgCode" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SuggestedOnly" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' Only "suggested" packages from the reservation will be included in availabilty result.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="SuggestedPkgParams" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Works whem "SuggestedOnly" set to 'Y'.
									Return Land Packages that are "suggested" for the Primary Package but not for the Reservation.
								</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="PrimaryPackageID" type="RecordID"/>
										<xs:element name="CabinCategory" type="CabinCategoryCode"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If omitted then "Default" Cabin Category will be used.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="PacketSize" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Max number of returned packages in a single packet (response).</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="LastPackageID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Used to get next packet of available packages. Defines last package ID received in the previous packet.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0"/>
							<xs:element name="IncludeComponents" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Components element is not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeInvalidPrice" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) packages with prices greater than setting "MaxSearchPrice" will be excluded from result node</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcPrices" type="Boolean" default="Y" minOccurs="0"/>
							<xs:element name="CalcAvailability" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' (default) the Selling Limits Inventory is calculated. If CalcPrices is 'Y', the Inventory is always calculated </xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeClassifications" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Package Classifications (Classifications element) are not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:annotation>
						<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
					</xs:annotation>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailLandPackages_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the secondary package availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailPackages" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailPackage" type="AvailSecondaryPkg" minOccurs="0"
								maxOccurs="unbounded">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailPrimPackages_IN">
		<xs:annotation>
			<xs:documentation>Input message for the primary package availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
						<xs:documentation>Custom segments search will be initiated automatically depending on the current input params. DeparturePorts, ArrivalPorts, DepartureCities, ArrivalCities, PackageLenRange, RouteClassifications, RouteClassTypes parameters can trigger custom segments search. If for some reason custom segments search was not successful (no packages with PACKAGE_TYPE.ALLOW_SEGMENTS defined/found, or too many custom segments found) then regular search will be executed and returned as result of GetAvailPrimPackages_OUT. Also in case of too many custom segments found, warning will be added to GetAvailPrimPackages_OUT.Errors</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="PackageStartRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package start.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageEndRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package end.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="SailIDs" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of specific sails to search for.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="SailID" type="RecordID" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PackageLenRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Min and max acceptable package length.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Min" type="xs:positiveInteger"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Max" type="xs:positiveInteger"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="DurationBasis" type="DurationBasis"
											default="DAYS" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PackageTypes" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PackageType" type="PkgType" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Ships" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible ship codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Ship" type="ShipCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="BrandCode" type="LongCode" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Destinations" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible destination codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Destination" type="DestinationCode"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Routes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible route codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Route" type="RouteCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RouteClassifications" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible route classification codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Classification" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:complexType>
												<xs:all>
												<xs:element name="Type" type="RouteClassType">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="Code" type="RouteClassCode">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
												</xs:annotation>
												</xs:element>
												</xs:all>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RouteClassTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible route classification types.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="RouteClassType" type="RouteClassType"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="DeparturePorts" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible departure port codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Port" type="PortCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ArrivalPorts" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible arrival port codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Port" type="PortCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="DepartureCities" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible departure city codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="City" type="CityCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ArrivalCities" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible arrival city codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="City" type="CityCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Seasons" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of acceptable season codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Season" type="SeasonCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Promotions" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of promotion codes, anyone of which should be available for a package to be acceptable. Also, used to obtain Amenity Program Value if $force_program PromoCode is passed.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PromoCode" type="PromotionCode"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SpecEvents" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible special event codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="SpecEvent" type="SpecEventCode"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ProductTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible product type codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ProductType" type="ProductType"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PriceRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Acceptable range for package price.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Min" type="Money" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Max" type="Money" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AdjacentOnly" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Used for booking of back-to-back cruises. If 'Y' - returns only those primary packages, which can be booked in addition to primary packages already existing in ResShell.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="SharedCabin" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="Gender" type="GenderU" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="MaxOccupancy" type="Occupancy">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="ReserveType" type="CabinReserveType" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ChildBeds" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IsRollawayAcceptable" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="AgreementID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Allotment Agreement ID to be used in the search.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="WithinAgreement" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - the search will be restricted to the allotment agreement defined by AgreementID</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CarAgreementID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Allotment Agreement ID for Car to be used in the search.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CarWithinAgreement" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - the search will be restricted to the allotment agreement defined by CarAgreementID</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="Car" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Car parameters for search. Overrides car requests from the booking.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="CarPriceCategory" type="CarPriceCategory">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CarWidth" type="CarDimension"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CarHeight" type="CarDimension"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CarLength" type="CarDimension"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CarWeight" type="CarWeight" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CarCtgInventory" type="CarPriceCategory"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If set, is used for car-deck server availability instead of the car price category.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="IgnoreCarIfNotAvailable" type="Boolean"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If set, price calculations will be done with assumption that the result reservation does not have the car.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="DynamicPackage" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If set, calculations will be done with assumption that the result will become a part of Dynamic Package.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Name" type="DynPkgName"/>
										<xs:element name="SeqN" type="Count">
											<xs:annotation>
												<xs:documentation>Zero-based (as in ResShell).</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CategoryAttributes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Implemented in 041113 only. Only categories that have requested attributes will be returned.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="CategoryAttribute" type="CodeValuePair"
											minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Cabin" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Impemented in 041113 only! If present, only packages where the requested cabin is available will be returned. There will be only one category in the answer, which includes the cabin.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Ship" type="ShipCode"/>
										<xs:element name="CabinNumber" type="CabinNumber"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Coupon" type="AssumedCoupon" minOccurs="0"/>
							<xs:element name="PackageTypeAttributes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Implemented in 041113 only. Only package types that have requested attributes will be returned.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PackageTypeAttribute" type="LongCode"
											minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="PacketSize" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Max number of returned packages in a single packet (response).</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="LastPackageID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Used to get next packet of available packages. Defines last package ID received in the previous packet.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CarAvailabilityMode" type="AvailabilityMode"
								default="ALL" minOccurs="0">
								<xs:annotation>
									<xs:documentation>By default a sail is returned even when there is no place for a car. Set this option to GTY in order to restrict sails by those having available car space.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeComponents" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Components element is not included into the response message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeSailActivities" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the SailActivities element is not included into the response message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ExcludeOccupancy" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - reservation occupancy is ignored - it is not compared to category capacity.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcPrices" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Calculate prices for Cars.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="PriceOptions" minOccurs="0">
								<xs:complexType>
									<xs:all>
										<xs:element name="PackageClasses" minOccurs="0">
											<xs:annotation>
												<xs:documentation>List of Package Classes to include in Total Price. The default is VOYAGE and CARDECK </xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
												<xs:element name="PackageClass" type="PkgClass"
												minOccurs="0" maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="IncludeCategories" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - available categories are calculated and returned in response message</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CategoryOptions" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Analyzed only if IncludeCategories is set to 'Y'</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="PriceDetails" type="Boolean" default="N"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If 'Y' - the PriceDetails element will be provided in the response message.</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="EstimateMode" type="Boolean" default="N"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If 'Y' - calculations are done faster by skipping "non-essential" items, like taxes, coupons, insurance, etc. Can be used to quote pricing.</xs:documentation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="PriceDetailsGrouping" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
												<xs:element name="GroupingCode" type="Code"
												default="DISPLAY" nillable="true" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Corresponds to the INV_ITEM_GROUP_MATCH.INV_ITEM_GROUP column. If set - invoice items will be grouped by their INVOICE_ITEM_TYPE.</xs:documentation>
												<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="CombineGuests" type="Boolean"
												default="N" minOccurs="0">
												<xs:annotation>
												<xs:documentation>If 'Y' PriceItem will have a different structure in the output message - see PriceItem type definition.</xs:documentation>
												<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="CalcMandatoryAddons" type="Boolean"
											minOccurs="0">
											<xs:annotation>
												<xs:documentation>If 'Y' - mandatory add-ons will be built and included into calculation of cabin price. If the node is absent, the behavior will be determined by a system-wide setting.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="DistributeGuests" type="Boolean"
											default="N" minOccurs="0">
											<xs:annotation>
												<xs:documentation>If Y - the system will simulate booking of multiple cabins in a category to accomodate all guests and perform automatic guest distribution into these cabins. After that the price will be calculated for each of the guests. This option can be used, for example, to get prices for all guests for deck categories (Capacity=1). Otherwise the system returns prices of guests with seq number &lt;= Capacity.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="IncludeGroups" default="NO" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If present and not equal NO then output message will include AvailPackage.Groups element for each found package. If set to AVAILABLE then only groups with available space in them are listed.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:whiteSpace value="collapse"/>
										<xs:enumeration value="NO"/>
										<xs:enumeration value="ACTIVE"/>
										<xs:enumeration value="AVAILABLE"/>
										<xs:enumeration value="ALL"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="IncludeFake" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Packages associated with "fake" sails will be included into result</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeInactive" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>Inactive packages and packages associated with inactive sails will be included into result</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ReturnSharedAvailability" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' - availability result for shared cabins is returned.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="AllowCacheUsage" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If Y - cached results of ship server availability requests are used to produce the response. </xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeClassifications" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Package Classifications (Classifications element) are not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludePkgDef" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' the Package definitions are not included into the response message. Instead, PackageID will be exposed</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeShipAvailability" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' the AvailCategory\ ShipAvailability node will be excluded from the result</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludePriceGuestTotal" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' the AvailCategory\ PriceTotals\ GuestTotal node will be excluded from the result</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice minOccurs="0">
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:documentation>If neither ResShellRef nor ResShell is present, system will use internal defaults to create the shell, which will be used by the search, for example, normally it will have two 'no-name' adults in the party. Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailPrimPackages_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the primary package availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailPackages" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailPackage" minOccurs="0" maxOccurs="unbounded"
								type="AvailPackage">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailPrimPkgsCustom_IN">
		<xs:annotation>
			<xs:documentation>Input message for the customizable primary package availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="IncludeComponents" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Components element is not included into the response message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeSailActivities" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the SailActivities element is not included into the response message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeClassifications" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Package Classifications (Classifications element) are not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludePkgDef" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' the Package definitions are not included into the response message. Instead, PackageID will be exposed</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludePriceGuestTotal" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' the AvailCategory\ PriceTotals\ GuestTotal node will be excluded from the result</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="CacheSearchMode" default="ReadCacheFirst"
								minOccurs="0" type="CacheSearchMode">
								<xs:annotation>
									<xs:documentation>Describes interaction between requests and cache</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="CustomParams">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Scenario" type="LongCode"/>
							<xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Code" type="LongCode"/>
										<xs:element name="Value" maxOccurs="unbounded">
											<xs:complexType>
												<xs:choice>
												<xs:element name="Str" type="xs:string"/>
												<xs:element name="Num" type="xs:double"/>
												<xs:element name="Date" type="xs:date"/>
												<xs:element name="DateTime" type="xs:dateTime"/>
												<xs:element name="Time" type="xs:time"/>
												</xs:choice>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ResultModes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If not present, then 'ALL' is used by default.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ResultMode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:whiteSpace value="collapse"/>
												<xs:enumeration value="ALL"/>
												<xs:enumeration value="MIN_DECK"/>
												<xs:enumeration value="MIN_CABIN"/>
												<xs:enumeration value="MIN_TOTAL"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailPrimPkgsCustom_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the customizable primary package availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailPackages" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailPackage" minOccurs="0" maxOccurs="unbounded" type="AvailPackage" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="AvailHotels" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailHotel" minOccurs="0" maxOccurs="unbounded" type="AvailHotel"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailPromotions_IN">
		<xs:annotation>
			<xs:documentation>Input message for the promotion availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:complexType>
						<xs:all>
							<xs:element name="IncludeCompatibilityInfo" type="Boolean" default="N" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' the Compatible Promos are listed as details for available ones.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:group ref="ResOrCargoShellForAvailability">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:group>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailPromotions_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the promotion availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailPromos" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailPromo" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PromoCode" type="PromotionCode">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="PromoName" type="PromotionName"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Components" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
												<xs:element name="ComponentReference"
												minOccurs="0" maxOccurs="unbounded">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element name="GuestRefs" type="GuestRefs">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:choice>
												<xs:element name="PackageID" type="RecordID">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>Implemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="RoomSeqN" type="HotelRoomSeqN">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="DiningReqID" type="RecordID">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="CarDeckRequest">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="CarDeckReqID" type="RecordID"/>
												<xs:element name="LegSeqN" type="SeqNumber"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="ShipRoomReqID" type="RecordID">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="Addon">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="AddonCode" type="AddonCode"/>
												<xs:element name="PackageID" type="RecordID"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Populated only if add-on is part of a booked package.</xs:documentation>
												</xs:annotation>
												</xs:element>
												<xs:element name="DateTimeRange"
												type="OpenDateTimeRange" minOccurs="0"/>
												<xs:element name="DeliveryPlace" type="Code"
												minOccurs="0"/>
												<xs:element name="DeliveryPlaceDetail"
												type="ShortComment" minOccurs="0"/>
												<xs:element name="LinkedRequest" minOccurs="0">
												<xs:complexType>
												<xs:choice>
												<xs:element name="ShipRoomReqID" type="RecordID"/>
												<xs:element name="DiningReqID" type="RecordID"/>
												</xs:choice>
												</xs:complexType>
												</xs:element>
												</xs:all>
												</xs:complexType>
												</xs:element>
												<xs:element name="Cargo" type="Boolean">
												<xs:annotation>
												<xs:documentation>If 'Y' - promotion is available for Cargo request.</xs:documentation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												</xs:element>
												<xs:element name="Air">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																				<XMLBridge>ToBeImplemented</XMLBridge>
																			</xs:appinfo>
												</xs:annotation>
												<xs:complexType>
												<xs:all>
												<xs:element name="HeaderID" type="RecordID"/>
												<xs:element name="SegmentID" type="RecordID"
												minOccurs="0"/>
												</xs:all>
												</xs:complexType>
												</xs:element>
												</xs:choice>
																<xs:element name="CompatiblePromos" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Populated only if list of compatible promotions is different for some of the components in this collection.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="PromoCode" type="PromotionCode" maxOccurs="unbounded"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="Comments" type="ShortComment"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CompatiblePromos" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Populated if the same list of promotions is applicable to all components in the Components collection. Otherwise, the CompatiblePromos element will be populated for each component individually.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="PromoCode" type="PromotionCode" maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailSeating_IN">
		<xs:annotation>
			<xs:documentation>Input message for the seating availability request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID"/>
					<xs:element name="ResShell" type="ResShell"/>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailSeating_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the seating availability request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:element name="AvailSeatings" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailSeating" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:all>
										<xs:element name="Seating" type="SeatingCode"/>
										<xs:element name="GuestRefs" type="GuestRefs"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailShorex_IN">
		<xs:annotation>
			<xs:documentation>Input message for the shore excursion availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="MatchItinerary" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If provided, PackageStarteRange and PackageEndRange will be ignored</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageStartRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package start.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageEndRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package end.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageLenRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Min and max acceptable package length.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Min" type="xs:positiveInteger"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="Max" type="xs:positiveInteger"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Ports" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of acceptable port codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Port" type="PortCode" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="InitialStatus" type="PkgStatus" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ProductTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible product type codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ProductType" type="ProductType"
											minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PackageTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible package type codes.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PackageType" type="PkgType" minOccurs="0"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ComponentTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>List of possible component types in package itinerary. Implemented in 040808.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ComponentType" type="ComponentType"
											minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PackageTypeAttributes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Implemented in 041113 only. Only package types that have requested attributes will be returned.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="PackageTypeAttribute" type="LongCode"
											minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:choice>
								<xs:sequence>
									<xs:element name="PacketSize" type="xs:positiveInteger"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation>Max number of returned packages in a single packet (response).</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="LastPackageID" type="RecordID" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used to get next packet of available packages. Defines last package ID received in the previous packet.</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<xs:element name="GroupByLocations" type="Boolean" default="N"
									minOccurs="0">
									<xs:annotation>
										<xs:documentation>If 'Y' - available shore excursions are grouped by location/date. Default is 'N' for compatibility reasons.</xs:documentation>
										<xs:appinfo source="Versonix">
											<XMLBridge>Implemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
							</xs:choice>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeComponents" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Components element is not included into the response message.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeInvalidPrice" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) packages with prices greater than setting "MaxSearchPrice" will be excluded from result node</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcPrices" type="Boolean" default="Y" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcAvailability" type="Boolean" default="Y"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'Y' (default) the Selling Limits Inventory is calculated. If CalcPrices is 'Y', the Inventory is always calculated </xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeClassifications" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Package Classifications (Classifications element) are not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
							<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailShorex_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the shore excursion availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:choice>
					<xs:element name="AvailPackages" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If GroupByLocations=N in the input message.</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="AvailPackage" type="AvailSecondaryPkg"
									minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:appinfo source="Versonix">
											<XMLBridge>Implemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="SailLocations" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If GroupByLocations=Y in the input message.</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="SailLocation" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:appinfo source="Versonix">
											<XMLBridge>Implemented</XMLBridge>
										</xs:appinfo>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Type" type="LocationType">
												<xs:annotation>
												<xs:documentation>Location Type</xs:documentation>
												<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="Code" type="Code" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Location Code</xs:documentation>
												<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="Name" type="ShortComment"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Location Name</xs:documentation>
												<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="ShipArrival" type="xs:dateTime"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Date/time of ship arrival to that location</xs:documentation>
												<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="ShipDeparture" type="xs:dateTime"
												minOccurs="0">
												<xs:annotation>
												<xs:documentation>Date/time of ship departure from that location</xs:documentation>
												<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="AvailPackages" minOccurs="0">
												<xs:annotation>
												<xs:documentation>Shore excursion packages available at that location</xs:documentation>
												<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element name="AvailPackage"
												type="AvailSecondaryPkg" minOccurs="0"
												maxOccurs="unbounded">
												<xs:annotation>
												<xs:appinfo source="Versonix">
																	<XMLBridge>Implemented</XMLBridge>
																</xs:appinfo>
												</xs:annotation>
												</xs:element>
												</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailTransfer_IN">
		<xs:annotation>
			<xs:documentation>Input message for the transfer availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="MatchItinerary" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If provided, PackageStarteRange and PackageEndRange will be ignored</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageStartRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package start.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="PackageEndRange" type="OpenDateRange" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Date range for package end.</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="LocationsFrom" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Location" type="Location"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LocationsTo" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Location" type="Location"
											maxOccurs="unbounded">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="InitialStatus" type="PkgStatus" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="SearchOptions" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="PacketSize" type="xs:positiveInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Max number of returned packages in a single packet (response).</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="LastPackageID" type="RecordID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Used to get next packet of available packages. Defines last package ID received in the previous packet.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="AvailabilityMode" type="AvailabilityMode"
								default="GTY" minOccurs="0"/>
							<xs:element name="IncludeComponents" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Components element is not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeInvalidPrice" type="Boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) packages with prices greater than setting "MaxSearchPrice" will be excluded from result node</xs:documentation>
									<xs:appinfo source="Versonix">
										<XMLBridge>ToBeImplemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="CalcPrices" type="Boolean" default="Y" minOccurs="0">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="IncludeClassifications" type="Boolean" default="N"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If 'N' (default) the Package Classifications (Classifications element) are not included into the response message.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
							<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailTransfer_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the transfer availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailPackages" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailPackage" type="AvailSecondaryPkg" minOccurs="0"
								maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!---->
	<!--Time Slots for external Systems (implemented in the 040808 version only !)-->
	<!---->
	<xs:element name="GetAvailTimeSlots_IN">
		<xs:annotation>
			<xs:documentation>Input message for the time slots for external systems availability request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="SearchParams">
					<xs:complexType>
						<xs:all>
							<xs:element name="SystemName"  type="ComponentType">
								<xs:annotation>
									<xs:documentation>External System Name.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Type" type="ComponentCode">
								<xs:annotation>
									<xs:documentation>Type of external component the slots are searched for.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:choice>
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:group ref="ResOrCargoShellForAvailability">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:group>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailTimeSlots_OUT">
		<xs:annotation>
			<xs:documentation>Response message for the time slots  availability request.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader"/>
				<xs:element name="AvailTimeSlots" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailTimeSlot" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:all>
										<xs:element name="GuestRefs" type="GuestRefs">
											<xs:annotation>
												<xs:documentation>List of guests which have this slot available.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Location" type="LocationRange"/>
										<xs:element name="DateTimeRange" type="DateTimeRange"/>
										<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!---->
	<!--Special Requests (implemented in the 040808 version only !)-->
	<!---->
	<xs:element name="GetAvailSpecRequests_IN">
		<xs:annotation>
			<xs:documentation>Input message for the Special Request availability request.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:choice minOccurs="0">
					<xs:element name="ResShellRef" type="RecordID">
						<xs:annotation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResShell" type="ResShell">
						<xs:annotation>
							<xs:documentation>If neither ResShellRef nor ResShell is present, system will use internal defaults to create the shell, which will be used by the search, for example, normally it will have two 'no-name' adults in the party.</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetAvailSpecRequests_OUT">
		<xs:annotation>
			<xs:documentation>Response message for GetAvailSpecRequests_IN.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="MsgHeader" type="MsgHeader">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailSpecRequests" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Sorted by Type and Code</xs:documentation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="AvailSpecRequest" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="SpReqType" type="Code">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="SpReqCode" type="Code">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="ProviderCode" type="Code">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="SpReqName" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="Comments" type="ShortComment"
											minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
										</xs:element>
										<xs:element name="CodedRemark" minOccurs="0">
											<xs:annotation>
												<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
												<xs:maxLength value="4"/>
												<xs:whiteSpace value="collapse"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Errors" type="Errors" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="CabinAttribute">
		<xs:sequence>
			<xs:element name="Code" type="CabinAttributeCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Min" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="Max" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AvailDining">
		<xs:all>
			<xs:element name="DiningType" type="DiningAvailType">
				<xs:annotation>
					<xs:documentation>Standard or Premium dining</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Not Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ship" type="ShipCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Restaurant" type="FacilityCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Beginning of the availability interval (time period, during which availability numbers are the same).</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rank" type="Rank" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Facility rank.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Duration of the availability interval in minutes.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AssignMode" type="DiningReqMode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestPrices" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated when CalcGuestPrices = Y.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="GuestPrice" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="GuestSeqN" type="GuestSeqN">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Price" type="Money">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AllocTotals" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AllocTotal" minOccurs="0" maxOccurs="3">
							<xs:annotation>
								<xs:documentation>Contains totals for each of the following result types - OK, GTY and WTL.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Result" type="AvailabilityResult"/>
									<xs:element name="Abs" type="xs:integer">
										<xs:annotation>
											<xs:documentation>Total number of allocations with given inventory result in the related queue.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Wgt" type="xs:double">
										<xs:annotation>
											<xs:documentation>Weighted number of allocations.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Tables" type="xs:nonNegativeInteger"
										minOccurs="0">
										<xs:annotation>
											<xs:documentation># of assigned tables (for OKs only)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="GuestsAbs" type="xs:integer">
										<xs:annotation>
											<xs:documentation>sum of PARTY_SIZE</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="GuestsWgt" type="xs:double">
										<xs:annotation>
											<xs:documentation>weighted sum of PARTY_SIZE</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Tables" type="AvailDiningTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Availability totals in terms of tables (the Attributes element from SearchParams is ignored).</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Seats" type="AvailDiningTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Availability totals in terms of seats (the Attributes element from SearchParams is ignored).</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TablesWithAttrs" type="AvailDiningTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Availability totals in terms of tables (attributes are taken into consideration).</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeatsWithAttrs" type="AvailDiningTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Availability totals in terms of seats (attributes are taken into consideration).</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SittingCode" type="SittingCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiningKind" type="DiningKind" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Availability" type="AvailabilityResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cumulative availability result for this dining item. It is determined as worst availability result among all resources, which will be used if this dining is booked. For example, if seats for this dining are available but selling limits do not allow selling it then availability result for this dining will be WTL or NO.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailQty" type="Count" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For standard dinings in 040808 only</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailWgt" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For standard dinings in 040808 only</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="AvailHotel">
		<xs:all>
			<xs:element name="HotelCode" type="HotelCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RoomType" type="HotelRoomType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated only if availability is requested on room type level.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RoomCategory" type="HotelRoomCategory" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated only if availability is requested on room type level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HotelName" type="TranslatedValue">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
					<xs:appinfo source="Versonix">
													<Translation>
														<TableName>HOTEL</TableName>
														<ColumnName>HOTEL_NAME_TYPED</ColumnName>
														<CodePath>HotelCode</CodePath>
														<CodeColumn>HOTEL_CODE</CodeColumn>
													</Translation>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HotelCategory" type="TranslatedValue">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
					<xs:appinfo source="Versonix">
													<Translation>
														<TableName>HOTEL_CATEGORY</TableName>
														<ColumnName>HOTEL_CATEGORY</ColumnName>
														<CodePath>HotelCategory</CodePath>
														<CodeColumn>HOTEL_CATEGORY</CodeColumn>
													</Translation>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryRank" type="Rank">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpDowngrade" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="Code">
						<xs:enumeration value="UPGRADE"/>
						<xs:enumeration value="DOWNGRADE"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="AvailabilityResult" type="AvailabilityResult" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Currency" type="CurrencyCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Currency of the availability booking</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceInc" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Booking price increment.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="Money">
				<xs:annotation>
					<xs:documentation>Hotel/room price.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>ToBeImplemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="AvailPackage">
		<xs:sequence>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>Full definition is provided if IncludePkgDef is absent or 'Y'</xs:documentation>
				</xs:annotation>
				<xs:element name="Package" type="PkgDefinition">
					<xs:annotation>
						<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="PackageID" type="RecordID"/>
			</xs:choice>
			<xs:element name="InventoryResult" type="InventoryResult">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsFITAvailable" type="Boolean" default="Y" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Wnen N, shows that FIT is not available, when, still, group availability is requested.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SharedInventoryResult" type="InventoryResult" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Inventory result for shared requests. Populated if ReturnSharedAvailability was set to Y in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CarDeck" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="WorstResult" type="InventoryResult">
							<xs:annotation>
								<xs:documentation>Worst result of CarDeck requests associated with the chosen primary package</xs:documentation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="PriceItem" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Populated if CalcPrices = 'Y' in input message.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="CarPriceCategory" type="CarPriceCategory">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Price" type="Money">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
						<xs:element name="AllotmentAgreementID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AvailCategories" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated if IncludeCategories was set to Y in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AvailCategory" type="AvailCategory" minOccurs="0"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SailActivities" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated if IncludeSailActivities was set to Y in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SailActivity" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="SailActivityID" type="RecordID">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="SailRefID" type="RecordID" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Ship" type="ShipCode">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="ActivityType" type="SailActivityType">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="DateTime" type="xs:dateTime">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Port" type="PortCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Pier" type="PierCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Notes" type="LongComment" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="DynamicFields" type="DynamicFields"
										minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
																			<XMLBridge>Implemented</XMLBridge>
																		</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Groups" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This element is only provided if IncludeGroups is not equal to NO in the input message.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Group" type="GroupHeader" minOccurs="0"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CalculatedPkgAttributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Package-level attributes calculated in business rules and restricted by selling limits.</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CalculatedPkgAttribute" type="SetupCode"
							maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Sail" type="SailRange" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated for custom segments (Segment node in input message)</xs:documentation>
					<xs:appinfo source="Versonix">
													<XMLBridge>Implemented</XMLBridge>
												</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HasSuggestedLandPackages" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populate as 'Y' if this package has "suggested" land package setup associated with it.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
