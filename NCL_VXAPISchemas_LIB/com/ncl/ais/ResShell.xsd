<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:altova="http://www.altova.com/xml-schema-extensions" elementFormDefault="unqualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="BaseTypes.xsd"/>
	<xs:include schemaLocation="TwShell.xsd"/>
	<xs:include schemaLocation="CouponShell.xsd"/>
	<xs:annotation>
		<xs:documentation>This schema contains definition of ResShell data type - the basic
			reservation object</xs:documentation>
	</xs:annotation>
	<!--===================================  Low level types-->
	<xs:simpleType name="ResStatus">
		<xs:annotation>
			<xs:documentation>Booking status</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="2"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="SH">
				<xs:annotation>
					<xs:documentation>Shopped - reservation is in process of shopping, is created in
						temporary storage only and not stored in the database
						yet.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OF">
				<xs:annotation>
					<xs:documentation>Offerred - reservation is created (inventory is guaranteed) but
						not payed yet.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BK">
				<xs:annotation>
					<xs:documentation>Booked - reservation is created and payed (either full or even
						partially).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CL">
				<xs:annotation>
					<xs:documentation>Closed - reservation is closed because all purchased services
						were provided (voyage is done, etc).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TM">
				<xs:annotation>
					<xs:documentation>Terminated - all accounting operations releated to this
						reservation are completed.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CX">
				<xs:annotation>
					<xs:documentation>Canceled - reservation is canceled.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CT">
				<xs:annotation>
					<xs:documentation>Canceled Terminated - all accounting operations releated to
						this canceled reservation are completed (there are could be some charges,
						cancelation fees, etc).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QT">
				<xs:annotation>
					<xs:documentation>Quoted - is not used anymore.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WL">
				<xs:annotation>
					<xs:documentation>Waitlisted - reservation is done but there is no available
						inventory.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RQ">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="versiondiff">040808 version only!</xhtml:span>
						Request - reservation is Requested used in agency programs functionality
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AltResID">
		<xs:annotation>
			<xs:documentation>Alternative Reservation ID. Often used as booking ID in other systems.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="LongCode"/>
	</xs:simpleType>
	<xs:simpleType name="AltGrouping">
		<xs:annotation>
			<xs:documentation>Used by cruise line and/or agency to group FIT together for any purpose</xs:documentation>
		</xs:annotation>
		<xs:restriction base="LongCode"/>
	</xs:simpleType>
	<xs:simpleType name="AutoTransfersMode">
		<xs:annotation>
			<xs:documentation>Controls how transfer component are created.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="15"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="MANUAL"/>
			<xs:enumeration value="AUTO"/>
			<xs:enumeration value="NONE"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ResChargeState">
		<xs:annotation>
			<xs:documentation>State of a Charge record on the booking - ACTIVE, VOIDED or
				DEFERRED.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="Code">
			<xs:enumeration value="ACTIVE"/>
			<xs:enumeration value="VOIDED"/>
			<xs:enumeration value="DEFERRED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DynamicPackages">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DynamicPackage" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Definition of SeaWare dynamic package (all dynamic packages must be setup in SeaWare)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Name" type="DynPkgName">
							<xs:annotation>
								<xs:documentation>Dynamic package name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="GuestRefs" type="GuestRefs">
							<xs:annotation>
								<xs:documentation>List of guests which have this package booked.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartDateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>At input used for matching Dyn.Packages</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Valid" type="Boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Is package valid? <xhtml:span class="attention">Ignored in input messages.</xhtml:span>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Components" minOccurs="0">
							<xs:annotation>
								<xs:documentation>List of dynamic package components. <xhtml:span class="attention">Ignored in input messages.</xhtml:span>
								</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Component" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Dynamic package
												component</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Name" type="DynPkgCompName">
													<xs:annotation>
														<xs:documentation>Component
												name</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="SeqN" type="Count"/>
												<xs:choice minOccurs="0">
													<xs:element name="Sail">
														<xs:annotation>
															<xs:documentation>Sail (voyage)
												component</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:all>
																<xs:element name="PackageID" type="RecordID">
																	<xs:annotation>
																		<xs:documentation>Reference to Primary Package
												Definition (PACKAGE_ID in PACKAGE_DEFINITION
												table)</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="Ship" type="ShipCode">
																	<xs:annotation>
																		<xs:documentation>Ship code</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="CabinCategory" type="CabinCategoryCode">
																	<xs:annotation>
																		<xs:documentation>Cabin
												category</xs:documentation>
																	</xs:annotation>
																</xs:element>
															</xs:all>
														</xs:complexType>
													</xs:element>
													<xs:element name="Hotel">
														<xs:annotation>
															<xs:documentation>Hotel
												component</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:all>
																<xs:element name="DateRange" type="DateRange"/>
																<xs:element name="CityCode" type="CityCode" minOccurs="0"/>
																<xs:element name="HtlCategory" type="HotelCategory" minOccurs="0"/>
																<xs:element name="HotelCode" type="HotelCode" minOccurs="0"/>
																<xs:element name="RoomCategory" type="HotelRoomCategory" minOccurs="0"/>
																<xs:element name="RoomType" type="HotelRoomType" minOccurs="0"/>
															</xs:all>
														</xs:complexType>
													</xs:element>
													<xs:element name="Transfer">
														<xs:annotation>
															<xs:documentation>Transfer
												component</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:all>
																<xs:element name="DateTime" type="xs:dateTime">
																	<xs:annotation>
																		<xs:documentation>Date and time of
												transfer</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="PackageID" type="RecordID">
																	<xs:annotation>
																		<xs:documentation>Reference to Primary Package
												Definition (PACKAGE_ID in PACKAGE_DEFINITION
												table)</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="Location" type="LocationRange" minOccurs="0"/>
															</xs:all>
														</xs:complexType>
													</xs:element>
												</xs:choice>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SetupCode">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="LongCode"/>
			<xs:choice>
				<xs:element name="Value" type="LongCode" minOccurs="0"/>
				<xs:element name="NumVal" type="xs:double" minOccurs="0"/>
			</xs:choice>
			<xs:element name="IsFixed" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>''Y'' indicates that the attribute was calculated when product was added and will not be recalculated later. That allows to have attributes dependent, for example, on current availability situation, which are not changed later</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ResInvoiceType">
		<xs:annotation>
			<xs:documentation>Invoice Type - internal type of the invoice header. Should replace Res Mode for bookings with reciepts.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="REGULAR">
				<xs:annotation>
					<xs:documentation>Default type of Invoice Header</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CHANGE_RECEIPT">
				<xs:annotation>
					<xs:documentation>Another kind of Invoice Header which will be linked to changes for existing reservation.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CANCEL_RECEIPT">
				<xs:annotation>
					<xs:documentation>Another kind of Invoice Header which is linked to cancellation results.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ADJUSTMENT_RECEIPT">
				<xs:annotation>
					<xs:documentation>Another kind of Invoice Header which contains manual invoice adjustments only.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PAYMENT_RECEIPT">
				<xs:annotation>
					<xs:documentation>Another kind of Invoice Header which can contain final manual invoice adjustments and financial information</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ResInvoice">
		<xs:annotation>
			<xs:documentation>Reservation invoice details</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RefNumber" type="RefNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Invoice reference number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Invoice ID (primary key in SeaWare DB)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money">
				<xs:annotation>
					<xs:documentation>Total invoice amount</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Date" type="xs:date">
				<xs:annotation>
					<xs:documentation>Invoice date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paid" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Invoice amount that is already paid</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="LongCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Current external delivery status</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="AgencyID" type="RecordID">
					<xs:annotation>
						<xs:documentation>ID of the agency whom this invoice is issued
							to</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ClientID" type="RecordID">
					<xs:annotation>
						<xs:documentation>ID of the client whom this invoice is issued
							to</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="CommissionFreezeMode">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="CAN INCREASE"/>
			<xs:enumeration value="CAN DECREASE"/>
			<xs:enumeration value="FROZEN"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="LockInfo">
		<xs:annotation>
			<xs:documentation>Contains detailed information about reservation's 	lock</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="ExpiresAt" type="xs:dateTime">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:int">
				<xs:annotation>
					<xs:documentation>in minutes</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AutoExtend" type="Boolean" default="Y">
				<xs:annotation>
					<xs:documentation>If Y - lock expiration is auto extended each time booking is accessed (via LoadBooking,UpdateBooking, etc.)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:element name="LockInfo" type="LockInfo">
		<xs:annotation>
			<xs:documentation>Same as type, to be used as a root element</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
	</xs:element>
	<!--===================================  Common-->
	<xs:group name="ResOrCargoShell">
		<xs:annotation>
			<xs:documentation>Choice of ResShell and CargoShell</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:choice>
			<xs:element name="ResShell" type="ResShell">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="ResOrCargoShellForAvailability">
		<xs:annotation>
			<xs:documentation>Requests with non-empty ResID are rejected if setting BlockResIDinAvailCalls is 'Y'</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:choice>
			<xs:element name="ResShell" type="ResShell">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:complexType name="ResShell">
		<xs:annotation>
			<xs:documentation>Main reservation object. Describes traveling party and their voyage - 	currently selected products (packages) and options.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="ResHeader" type="ResHeader" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reservation header. Contains common data for the booking.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResGuests" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Enumerates each guest in the party. All other components of the booking reference guests by their sequence number in corresponding ResGuest element.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResGuest" type="ResGuest" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Reservation guest. Don't confuse with SeaWare
									Client! Guest must be associated with a client at the end of
									shopping process but can be an empty placeholder in the
									middle.</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ResPackages" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Primary packages used in reservation. Primary package define main SeaWare product - voyage (sail).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResPromotions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Promotions that should be applied to this reservation</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResPromotion" type="ResPromotion" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResShipRequests" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Passenger accomodation requests (for cabins, seats or deck places)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResShipRequest" type="ResShipRequest" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Cabin/place accommodation
									request</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ResRoomRequests" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ResTransportations" minOccurs="0"/>
			<xs:element name="ResAirPoints" type="ResAirPoints" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ignored in input messages</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResAirIndependents" type="ResAirIndependents" minOccurs="0"/>
			<xs:element name="ResAirActuals" type="ResAirActuals" minOccurs="0"/>
			<xs:element name="ResAddons" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reservation addons</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResAddon" type="ResAddon" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Reservation addon</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResInvoice" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information about calculated reservation prices. <xhtml:span class="attention">Ignored in input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResInvoiceItem" type="ResInvoiceItem" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Invoice item (line)</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResInvoicePreCancel" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information about prices of <xhtml:i>canceled</xhtml:i> reservation that was calculated at the moment rigth before canceling (canceled reservation doesn't have prices). <xhtml:span class="attention">Ignored in input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResInvoiceItem" type="ResInvoiceItem" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResPaymentSchedule" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Payment schedule that is calculated for the reservation. Only the 'Extension' element is processed in input messages.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="ResPaymentSchedule">
							<xs:attribute name="UpdateMode" type="xs:boolean" default="false"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResCommissions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Calculated commissions to agency. Only elements with
 IsManualAdj = 'Y' are processed in input messages.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResCommissItem" type="ResCommissItem" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResComponents" minOccurs="0">
				<xs:annotation>
					<xs:documentation>All reservation components. <xhtml:span class="attention">Ignored in input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ResComponent" type="ResComponent" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ResCharges" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reservation charges. Some of them are calculated, some - can be added manually.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalComponents" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Components from external systems related to the reservation</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ExternalComponent" type="ExternalComponentDescr" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AccTransactions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reservation payment transactions. <xhtml:span class="attention">Ignored in input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Transaction" type="AccTransaction" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MarketingMsgs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Marketing messages associated with this reservation. 		<xhtml:span class="attention">Ignored in input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="MarketingMsg" type="MarketingMessage" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Coupons" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Coupons that are attached to reservation as discounts</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Coupon" type="ResCoupon" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VacationInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="VacationInfoItem" type="VacationInfo" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TwInfo" type="TwInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>TravelWith details. <xhtml:span class="attention">Ignored in  input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element ref="AuthorizationCodes" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Res. Authorization Codes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResGtbDelivery" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest's Travel Booklet Delivery Information</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="GtbDeliveryInfo" type="GtbDeliveryInfo" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResGtbRequests" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest's Travel Booklet Requests. Output Only</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="GtbRequest" type="GtbRequest" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Guests Gtb Delivery</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SpecialRequests" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SpRequest" type="ResSpecRequest" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResCost" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CostItem" type="ResCostItem" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>For history. Output Only</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResHeader">
		<xs:annotation>
			<xs:documentation>Contains common data for the booking.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="ResID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The ResID element contains reservation ID and is used to
combine shell creation/modification with processing of the request. If specified reservation ID is greater than 0 - existing booking is placed in the edit mode, which means creation of the shell, if it was not created yet, and then updated with request data prior to processing of the request. If specified reservation ID is less than 0 - it is treated as reference to a previously created new reservation shell, which is also updated with request
data prior to processing of the request.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResName" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reservation name (usually - full name of one of the guests).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResType" type="ResType" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reservation type (must be setup in SeaWare)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgencyID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Primary Agency ID, which is financially responsible for the booking, if it is not marked as Internal. Refers to the Travel Agency record
in Seaware database. The system may force specific values for Agency ID
based on information provided in the Login message (TravelAgent and Consumer modes). For 'Internal' and 'ResAgent' login modes applications must provide valid Agency ID as part of ResHeader elements.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to the Travel Agent record in Seaware database. The
system determines Agent ID based on information provided in the Login message and then forces that value into all bookings created during this session. The only exception is for an 'Internal' login mode - applications using this mode may provide valid Agency ID as part of ResHeader elements.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecAgencyID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Secondary Agency ID.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecAgentID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Travel Agent associated with the Secondary 	Agency.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to an existing group booking in Seaware database. If
GroupID is present the booking will be made against previously reserved group space and rates. </xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CollectionID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="versiondiff">040808 version only!</xhtml:span>
Refers to an existing collection in Seaware database. Used for agency program functionality.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Currency" type="CurrencyCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Currency of the booking. In current Seaware implementation
currency is determined by the Travel Agency profile record in Seaware 	database and cannot be changed on individual bookings. All accounting 	transactions related to this booking (for example, payments) must use the same currency.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Referral" type="Referral" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Source of the information about company's services. This can be another client who recommended company, information in the Internet,
etc</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InitialDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Timestamp of creation of the booking</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResStatus" type="ResStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Booking status: SH - Shopping (new booking), QT - Quoted, OF - Offered, BK - Booked or Confirmed, CL - Closed, TM - Terminated, WL - Waitlisted, CX - Canceled, CT - Canceled and Terminated.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DynamicFields" type="DynamicFields" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional user-defined fields.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AltResID" type="AltResID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alternative Reservation ID. Often used as booking ID in other systems.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceTotals" type="InvoiceTotals" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Total invoice amounts. <xhtml:span class="attention">Output only.</xhtml:span>
						</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Probability" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value (0 &lt; Probability &lt; 1) that defines the probability of the fact that this reservation will not be canceled before departure.
Probability can be calculated according to the rules or set manually. All inventory data is calculated taking into consideration reservation
probability values. <xhtml:span class="attention">Ignored in input messages
unless IsManualProbability = 'Y'</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsManualProbability" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If 'Y' - probablity was set manually, otherwise - it was 	calculated by the system based on business rules setup.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SourceCode" type="SourceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Origin of the booking - IN HOUSE, INTERNET, SABRE, AMADEUS, etc.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfficeCode" type="OfficeCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Office code this reservation belongs to</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfficeLocation" type="OfficeLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines some less formal sub-division within office code. If not explicitly specified, the value will be taken from the OFFICE_LOCATION environment variable.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyRate" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CancCase" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="LanguageCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShoppingComments" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Temporary comment, which is not stored in the database, but can be used during editing session.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResComments" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Deprecated and ignored by the system. Use StoreBooking_IN.Options.Comments or ResShell.UserNotes instead.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AutoTransfersMode" type="AutoTransfersMode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="versiondiff">Implemented in 040808 version only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalcFields" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Calculated fields. <xhtml:span class="attention">Output only.</xhtml:span> (If LoadBooking.Options.CalcFields is presented in corresponding request)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="PenaltyInfo" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Information about cancellation penalties that will be applied if reservation is cancelled</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="PenaltyDate" type="xs:date">
										<xs:annotation>
											<xs:documentation>Date when penalty is
												calculated</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="PenaltyAmount" type="Money">
										<xs:annotation>
											<xs:documentation>Penalty amount</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Charges" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Penalty details</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Charge" minOccurs="0" maxOccurs="unbounded">
													<xs:complexType>
														<xs:all>
															<xs:element name="GuestSeqN" type="GuestSeqN">
																<xs:annotation>
																	<xs:documentation>Sequence number of a guest in a
												reservation</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="ChargeCode" type="Code">
																<xs:annotation>
																	<xs:documentation>Penalty code (shoudl be setup in
												SeaWare)</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Amount" type="Money">
																<xs:annotation>
																	<xs:documentation>Pemalty
												amount</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="BizArea" type="LongCode">
																<xs:annotation>
																	<xs:documentation>
																		<xhtml:span class="warning">TBD</xhtml:span>
																	</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Explanation" type="ShortComment" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Penalty
												reason</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>ToBeImplemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
														</xs:all>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="InvoiceInfo" minOccurs="0">
							<xs:annotation>
								<xs:documentation>User-definable invoice calculated parameters</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="CalcParam" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:all>
												<xs:element name="Name" type="LongCode"/>
												<xs:element name="Value" type="xs:double"/>
											</xs:all>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="PaymentCollection" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Returns payment items (from payment schedule) that are expected to be paid at the present time (based on business rules). The information can be used together with InvoicePaid for example, to determine if a payment must be collected on booking store.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="PaymentCollectionInfo" type="PaymentCollectionInfo" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="IsOnTerms" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckInInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="versiondiff">Implemented in 041113 only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="SelfCheckInDeclineReason" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>If non-empty and not 0 - self checkin is
									prohibited</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckedIn" minOccurs="0">
							<xs:annotation>
								<xs:documentation>No - not checked in, All - all guests checked in,
									Some - some guests are checked in - use
									ResShipRequests.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:length value="15"/>
									<xs:whiteSpace value="collapse"/>
									<xs:enumeration value="No"/>
									<xs:enumeration value="All"/>
									<xs:enumeration value="Some"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="RollawayBedsRequested" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="versiondiff">Implemented in 041113 only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LockInfo" type="LockInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Returned for reservations locked by current session</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginCountry" type="CountryCode" minOccurs="0"/>
			<xs:element name="ReserveType" type="ReserveType" minOccurs="0"/>
			<xs:element name="Seating" type="SeatingCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Current version of the reservation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HoldUpdatesToAirSystem" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If 'Y' - changes in client information or cruise itinerary will not be sent to the external air system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResGuest">
		<xs:annotation>
			<xs:documentation>Defines each traveler in the party.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestSeqN">
				<xs:annotation>
					<xs:documentation>Sequence number of the guest. Must be unique within the ResShell element. All guests in the party must be assigned consecutive sequence numbers.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="GuestID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to an existing guest record in Seaware database (for existing bookings only). Ignored in input messages</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestType" type="GuestType" default="REGULAR" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cruise line specific guest type code. Examples: "REGULAR", "TRAVEL AGENT", "DONATION", etc.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestAge" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest age at time of travel. Guest is assumed to be an adult if age is not specified. The GuestAge element is only used by the system if there is no client profile for the guest or birthday date is not specified in the client profile.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:nonNegativeInteger">
						<xs:totalDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ParentGuestSeqN" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Reference to a parent guest for guests that must be accompanied (children, for example)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ClientID" type="RecordID" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to client profile record. The profile can either be stored in the client database on the cruise line side or be maintained as part of session. The system will first try to locate the profile in the Client elements of the session and then will go into the client database (only if provided ClientID is greater than 0). Negative numbers (-1, -2, etc.) should be used for new client and household IDs.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaxID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Passenger ID used for communications with the external Air system. May not be populated if there are air bookings for this passenger. Output only. Can be negative.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Insurance" type="InsuranceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest insurance type. <xhtml:span class="attention">Output
only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Gender" type="Gender" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest gender (either Male or Female)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgeCategory" type="AgeCategory" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest age category (for example, ADULT, JUNIOR, BABY, etc).All categories must be setup in SeaWare.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Seating" type="SeatingCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dining accommodation number. <xhtml:span class="versiondiff">Corresponds to DINING parameter in 040808 version.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DynamicFields" type="DynamicFields" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResComponent">
		<xs:annotation>
			<xs:documentation>Describes package component</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs">
				<xs:annotation>
					<xs:documentation>Used to define chronological sequence of components inside the package.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:dateTime">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="ComponentType">
				<xs:annotation>
					<xs:documentation>Examples: HOTEL, TRANSFER, EVENT, EXCURSION, etc.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="ComponentCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code of a specific component of given type, for example, hotel code, if TYPE = 'HOTEL', etc.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubCode1" type="CompSubCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubCode2" type="CompSubCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubCode3" type="CompSubCode3" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateTimeRange" type="DateTimeRange" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Location" type="LocationRange" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Comments" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResPromotion">
		<xs:annotation>
			<xs:documentation>Promotion item.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of guest sequence numbers this promotion ishould be aplied to</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComponentReference" type="ComponentReference">
				<xs:annotation>
					<xs:documentation>Reference to the component this promotion should be applied to</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromoCode" type="PromotionCode">
				<xs:annotation>
					<xs:documentation>Promotion code. All promo codes must be setup in SeaWare.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsActive" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Ignored in input messages</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mode" type="PromotionMode">
				<xs:annotation>
					<xs:documentation>Promotion mode (controls how promotion is applied)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ManualInput" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated for Promotions that give discount defined by the user when adding such Promotion to the booking.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Type" type="Code">
							<xs:annotation>
								<xs:documentation>AMOUNT or PERCENT</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Value">
							<xs:annotation>
								<xs:documentation>Interpretation depends on Type</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:decimal">
									<xs:totalDigits value="10"/>
									<xs:fractionDigits value="2"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResDelivery">
		<xs:annotation>
			<xs:documentation>Alternative Delivery Information for Reservation and/ Guests</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SeqN" type="Count" minOccurs="0"/>
			<xs:element name="Name" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Priority" type="Count" minOccurs="0"/>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided for Guest-level delivery; otherwise, it reflects
						Reservation-level information (the node is not
						implemented)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="AltAgencyID" type="RecordID"/>
				<xs:element name="Address" type="DocAddrWithType"/>
				<xs:element name="Phone" type="DocPhoneWithType"/>
				<xs:element name="EMail" type="AddressLine"/>
			</xs:choice>
			<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ExternalComponentDescr">
		<xs:annotation>
			<xs:documentation>Record in the table RES_EXT_COMPONENT, works as a fulfilled "request" for external product,
				            Used instead of PackageId in res packages. Includes some information which
							is needed for reservation consistency and not included into the ResPackage node paramaters which for this case are not ignored in update calls
							EffectiveDate, VacationDates, Notes, GuestRefs
			</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="SystemName" type="ComponentType">
				<xs:annotation>
					<xs:documentation>Component Type, original Component Type=EXTERNAL
					implemented)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="ComponentCode"/>
			<xs:element name="ExtID">
				<xs:annotation>
					<xs:documentation>The External System SystemName to ensure that its different components with the same Guest on the same reservation have different ExtID</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Name" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Code" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Code2" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of guests which have this external component booked.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>External component effective date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Location" type="LocationRange">
				<xs:annotation>
					<xs:documentation>External Component Location</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateTimeRange" type="DateTimeRange" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The datetime period by this external component
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Rule price calculation input parameter</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PricedOccupancy" type="Count" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Rule price calculation input parameter</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Notes" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>External component notes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalParams" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Not yet implemented: Parameters used by the External System and Business Rules</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Code" type="LongCode"/>
									<xs:element name="Value" maxOccurs="unbounded">
										<xs:complexType>
											<xs:choice>
												<xs:element name="Str" type="xs:string"/>
												<xs:element name="Num" type="xs:double"/>
												<xs:element name="Date" type="xs:date"/>
												<xs:element name="DateTime" type="xs:dateTime"/>
												<xs:element name="Time" type="xs:time"/>
											</xs:choice>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<!--===================================  Requests-->
	<xs:complexType name="ResAddon">
		<xs:annotation>
			<xs:documentation>Add-ons (options, amenities).</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of guest sequence numbers this addon should be applied to.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddonIDs" type="RecordIDList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only.</xhtml:span>Order of IDs in the array corresponds to order of Guests in GuestRefs.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddonCode" type="AddonCode">
				<xs:annotation>
					<xs:documentation>Addon code (must be setup in SeaWare). For example: BREAKFAST, WINE, etc.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddonSubcode" type="LongCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Addon sub-code. Some additional classification inside addon code.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Date this addon is available from</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsMandatory" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies that this addon is mandatory (according to business rules) and was added automatically. <xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateTimeRange" type="DateTimeRange">
				<xs:annotation>
					<xs:documentation>Date range when this addon is eligible</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeliveryPlace" type="Code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Addon Delivery Place Code (to specify a place where addon should be delivered). For example: CABIN, RESTAURANT, etc. Must be setup in SeaWare in advance.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeliveryPlaceDetail" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Delivery details. For example, for code CABIN this could be a cabin number where addon should be delivered.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="Quantity" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of requested addons of the same kind</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CouponIDs" type="RecordIDList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>ID of preprinted coupons associated with this Addon. <xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserDefinedCouponIDs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>User defined ID of preprinted coupons associated with this Addon. <xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="LongCode"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PriceCode" type="AddonPriceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The identifier to reference from ResAddonPrices component. Is used to assign manual prices for addons that allow that. Pair "AddonCode + PriceCode" must be unique within reservation (it is used as a key in ResAddonPrice component).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromoCode" type="PromotionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Promotion which this add-on is linked to. <xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="PkgStatus" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SetupCodes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SetupCode" type="SetupCode" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PPSCardOwner" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Client ID of the PPS card owner</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Comments" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Notes" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResAddonLink">
		<xs:annotation>
			<xs:documentation>Describes links between addons from addon package</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="ParentAddonID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Parent Addon ID (one of ResAddon.AddonIDs).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddonIDs" type="RecordIDList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of IDs of "child"
						addons</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResAddonPrice">
		<xs:annotation>
			<xs:documentation>Manual price setup for Add-ons</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="AddonCode" type="AddonCode">
				<xs:annotation>
					<xs:documentation>Addon code to set prices for</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceCode" type="AddonPriceCode">
				<xs:annotation>
					<xs:documentation>Addon price code. Must reference to one defined in ResAddon component. Actual key to reference is unique combination of AddonCode + PriceCode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Prices">
				<xs:annotation>
					<xs:documentation>Addon prices itself</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Price" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:all>
									<xs:element name="Type" type="InvoiceItemType">
										<xs:annotation>
											<xs:documentation>Invoice item type. List of invoice
												item types allowed to be set manually for addons is
												defined by special business
												rules.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SubType1" type="InvoiceItemSubType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Invoice item sub-type
												1</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SubType2" type="InvoiceItemSubType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Invoice item sub-type
												2</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SubType3" type="InvoiceItemSubType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Invoice item sub-type
												3</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="Money">
										<xs:annotation>
											<xs:documentation>Price amount in reservation
												currency</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResPackage">
		<xs:annotation>
			<xs:documentation>Describes primary package booked by the party</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="PackageID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Valid package ID returned by an availability message,
						references PACKAGE_ID in PACKAGE_DEFINITION.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of guests which have this package
						booked.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Normally populated by the system and contains timestamp when
						package was first added to the booking. Certain restrictions apply if
						external application tries to change this value.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BookMode" type="PkgBookMode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>PRE-BOOK or PRE-SELL. <xhtml:span class="attention">Ignored in
							input messages.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageClass" type="PkgClass" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageType" type="PkgType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NeedsExtraSeat" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of guests, which will need an extra
						seat.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="VacationDates" type="DateTimeRange" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The datetime period of the voyage defined by this package. Can
						differ from the date range in the package definition in case of a) custom
						segment and/or b) optional component selection. <xhtml:span class="attention">Ignored in input messages except for the case of external components.</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DynamicPackage" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dynamic package this primary package is a part
						of</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Name" type="DynPkgName">
							<xs:annotation>
								<xs:documentation>Dynamic package name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartDateTime" type="xs:dateTime" minOccurs="0"/>
						<xs:element name="SeqN" type="Count"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Options" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes selection of optional components of the
						package.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Option" type="ResPkgOption" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ExtraGuestInfos" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes extra guests on the package.
						  Only ExtraGuestInfo items with ExtraGuestCount > 0 are reported in output.
						  All ExtraGuestInfo items, included in input participate in the update</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Not Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ExtraGuestInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Not Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="GuestSeqN" type="GuestSeqN" minOccurs="1" maxOccurs="1"/>
									<xs:element name="ExtraGuestCount" type="Count" minOccurs="1" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Ship" type="ShipCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceCategory" type="CabinCategoryCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This element is mandatory for packages, which include sail
						components.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BerthCategory" type="CabinCategoryCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If present and different from PriceCategory - defines an
						upgrade request, which can be subject to various restrictions (security,
						presence of a valid upgrade promotion code, availability of such promotion,
						etc.).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryUpgradePromo" type="PromotionCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Promotion code that was used to get cabin category upgrade (if
						any)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CabinSeqN" type="CabinSeqN" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be = 0 only in AutoCabinDistribution
						mode</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="PkgStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="warning">TBD</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PPSCardOwner" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Client ID of the PPS card owner</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParentPackageID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output for Shorex, Dining and ShipRoom
							only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SetupCodes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SetupCode" type="SetupCode" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Notes" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoBerthGuests" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of guests without beds in a cabin</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParentGuestSeqN" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Overridden value of
						ResGuest.ParentGuestSeqN</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Sail" type="SailRange" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes departure and arrival points. For custom segments it
						might be different from those determined by PackageID.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="StdDining">
		<xs:annotation>
			<xs:documentation>Standard included Dining 040808 version only</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="Ship" type="ShipCode" minOccurs="1" maxOccurs="1"/>
			<xs:element name="Restaurant" type="ComponentCode" minOccurs="1" maxOccurs="1"/>
			<xs:element name="StartDateTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="Guests" type="GuestRefs" minOccurs="1" maxOccurs="1"/>
			<xs:element name="ExtraGuestInfos" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains a list of items about extra guest.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ExtraGuestInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="GuestSeqN" type="GuestSeqN"/>
									<xs:element name="ExtraGuestCount" type="Count"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResPkgOption">
		<xs:annotation>
			<xs:documentation>Describes selection of optional components of a 	package.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CompRecordID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Points to a component record in package definition element (PkgeDefinition.PkgComponent.CompRecordID).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ignored for MANDATORY components. For others - defines user selection of optional components. If not set in the input message default behavior is assumed (see PkgComponent.BookMode element).</xs:documentation>
				</xs:annotation>
				<xs:element name="IsSelected" type="Boolean">
					<xs:annotation>
						<xs:documentation>If set - applies to all guests in ResPackage.GuestRefs (or other owning element).</xs:documentation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:sequence>
					<xs:element name="SelectedForGuests" type="GuestRefs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>This should be a subset of ResPackage.GuestRefs</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>Implemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ExcludedForGuests" type="GuestRefs" minOccurs="0">
						<xs:annotation>
							<xs:documentation>This should be a subset of ResPackage.GuestRefs and it should not have common elements with 	SelectedForGuests.</xs:documentation>
							<xs:appinfo source="Versonix">
								<XMLBridge>ToBeImplemented</XMLBridge>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResRoomRequest">
		<xs:annotation>
			<xs:documentation>Provides additional details for hotel related 	components.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="RoomSeqN" type="HotelRoomSeqN">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:dateTime">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Stay" type="DateRange">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="City" type="CityCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HotelCategory" type="HotelCategory" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Mandatory for new requests</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HotelCode" type="HotelCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RoomCategory" type="HotelRoomCategory" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RoomType" type="HotelRoomType" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Occupancy" type="Occupancy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be omitted in input messages. Actual value is always calculated based on the Guests element.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsIndependent" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExtraRoomMode" type="HotelExtraRoomMode" default="AUTO" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Comments" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Guests" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If omitted - assumed all guests.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="RoomGuest" maxOccurs="unbounded">
							<xs:complexType>
								<xs:all>
									<xs:element name="GuestRefs" type="GuestRefs"/>
									<xs:element name="Stay" type="DateRange"/>
									<xs:element name="DynamicPackage" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Name" type="DynPkgName"/>
												<xs:element name="StartDateTime" type="xs:dateTime" minOccurs="0"/>
												<xs:element name="SeqN" type="SeqNumber"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="HasPreAirNight" type="Boolean" minOccurs="0"/>
									<xs:element name="HasPostAirNight" type="Boolean" minOccurs="0"/>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="InventoryReqType" type="InventoryReqType" default="STANDARD" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Requests" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ignored in input messages.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="HotelRequest" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="Stay" type="DateRange">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="RequestType" type="HotelReqType">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="PackageID" type="RecordID" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Mandatory for 'PACKAGE', 'UPGRADE',
												'DOWNGRADE' and 'EXTRA ROOM' request
												types.</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="HotelSpaceType" type="HotelSpaceType" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Occupancy" type="Occupancy">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="InventoryResult" type="AvailabilityResult" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>ToBeImplemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Inventory" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Input: assignment or unassignment (is used if Result is being changed from OK to GTY or vice versa)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Result" type="InventoryResult" minOccurs="0"/>
						<xs:element name="AssignedHotel" type="HotelCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Output: populated only if Result = 'OK'. Input:
									mandatory if Result = 'OK'</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AssignedRoom" type="HotelRoomType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Output: populated only if Result = 'OK'. Input:
									mandatory if Result = 'OK'</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SpaceType" type="HotelSpaceType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Input: mandatory if Result =
									'OK'</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HotelConfNumber" type="HotelConfNumber" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Output only. Maybe populated only if Result =
									'OK'</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResShipRequest">
		<xs:annotation>
			<xs:documentation>Provides addtional details for ship related components. Multiple ship requests can be used, for example, to specify non-consecutive sailings or multiple 	cabins (more than one cabin per day).</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whiteseparated list of guest sequence numbers within reservation this request should be applied to</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CabinSeqN" type="CabinSeqN" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be = 0 only in AutoCabinDistribution mode</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Sail" type="SailRange">
				<xs:annotation>
					<xs:documentation>Sail definition</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Category" type="CabinCategoryCode">
				<xs:annotation>
					<xs:documentation>Requested cabin category</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceCategory" type="CabinCategoryCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Requested cabin category</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveType" type="CabinReserveType" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies than cabin should be taken from reserve with specified reserve type</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InventoryReqType" type="InventoryReqType" default="STANDARD" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Inventory request type</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckedInGuests" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of guest sequence numbers that should be marked as checked in.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoShowGuests" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of guest sequence numbers that should be marked as "No Show" (were not seen on check in).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChildBedGuests" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of guest sequence numbers child bed is requested for.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoBerthGuests" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="attention">Output only.</xhtml:span> List of guests without beds in a cabin.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxCabinOccupancy" type="Occupancy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Should be provided for berthed reservations only. If provided than this request is considered as a berth request (shared cabin 	accommodation).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Gender" type="GenderU" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Should be provided for berthed reservations only. Specifies the gender preferences of this accommodation request (not gender of guests!). In addition to Male and Female genders (what means that berth is requested in Male or Female ONLY cabins) there is a "Mixed" gender value (U) which means that there is no any gender preferences and guest can be allocated in the cabin which can share both genders: males and females.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RequestedCabin" type="CabinNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cabin# requested by the customer. Might be different from the cabin that is actually assigned! Requested Cabin has no effect if Inventory node is present.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inventory" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Inventory allocation data</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Result" type="InventoryResult" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Inventory allocation result. Example values are:
									OK (place is allocated), GTY (place is guaranteed according to
									requested parameters though exact inventory slot is not
									allocated yet), etc</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AutoAssignment" type="Boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									<xhtml:span class="attention">Input messages only.</xhtml:span>
									If "Y" than cabin/place number will be assigned as a result of
									this request (if it was not assigned before). This means than
									real inventory slot is supposed to be allocated in response to
									this request so successful inventory result should always be
									'OK' and never 'GTY'.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CabinChain" type="CabinChain" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Populated only if Result = 'OK'; Unassign is
									performed if the node is present in the input message with no
									child elements there. </xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Attributes" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						<xhtml:span class="warning">TBD</xhtml:span>
					</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Attribute" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:all>
									<xs:element name="Code" type="Code"/>
									<xs:element name="IsRequired" type="Boolean" minOccurs="0"/>
									<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AllotmentAgreementID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies than allocation attempt should be done from the space reserved for allotment with specified agreement ID first. If there is no more inventory available for this allotment than space will be requested from common inventory.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResSpecRequest">
		<xs:annotation>
			<xs:documentation>Special Requests, i.e. requests for special needs (040808 version only
				!)</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="OrderID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderStatus" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="Code">
						<xs:enumeration value="NEW"/>
						<xs:enumeration value="CANCEL"/>
						<xs:enumeration value="WAITLIST"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Description" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Comments" type="ShortComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Requester" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="AgencyID" type="RecordID">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="AgentID" type="RecordID">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element name="ClientID" type="RecordID">
								<xs:annotation>
									<xs:appinfo source="Versonix">
										<XMLBridge>Implemented</XMLBridge>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:choice>
						<xs:element name="Name" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Output only</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Phone" type="Phone" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Recipient" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="ResID" type="RecordID">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="GroupID" type="RecordID">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="Dispatched" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Date" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="OK" type="Boolean" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="IsValid" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Items" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="ItemID" type="RecordID" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="SpReqType" type="Code">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="SpReqCode" type="Code">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="SpReqName" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Output only.</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="50"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="GuestSeqN" type="xs:positiveInteger" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="GuestFullName" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="60"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Quantity" type="xs:double" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Delivery" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="PlaceCode" type="Code" minOccurs="0">
													<xs:annotation>
														<xs:appinfo source="Versonix">
															<XMLBridge>Implemented</XMLBridge>
														</xs:appinfo>
													</xs:annotation>
												</xs:element>
												<xs:choice minOccurs="0">
													<xs:element name="Date" type="xs:date">
														<xs:annotation>
															<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
														</xs:annotation>
													</xs:element>
													<xs:element name="DateTime" type="xs:dateTime">
														<xs:annotation>
															<xs:appinfo source="Versonix">
																<XMLBridge>Implemented</XMLBridge>
															</xs:appinfo>
														</xs:annotation>
													</xs:element>
												</xs:choice>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="IsValid" type="Boolean" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Comments" type="ShortComment" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResAirPoint">
		<xs:annotation>
			<xs:documentation>Defines a point in the cruise itinerary where air transportation is possible or expected.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="VacStart" minOccurs="0">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="CalculatedArrivalLocation"/>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="VacEnd" minOccurs="0">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="CalculatedDepartureLocation"/>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Inner" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Departure" type="CalculatedDepartureLocation"/>
							<xs:element name="Arrival" type="CalculatedArrivalLocation"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:sequence>
				<xs:element name="AirPointCode" type="AirPointCode"/>
				<xs:element name="GuestRefs" type="GuestRefs"/>
				<xs:element name="EffectiveDate" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>The timestamp when this record was (re-)created.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="AirCabinClass" type="AirCabinClass" minOccurs="0">
					<xs:annotation>
						<xs:documentation>The Air Cabin Class determined by the Business Rules. For example, there can be a policy when guests who booked suites on the ship are entitled to business class air travel.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResAirPoints">
		<xs:annotation>
			<xs:documentation>Array of ResAirPoint. Output only.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResAirPoint" type="ResAirPoint" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResAirIndependent">
		<xs:annotation>
			<xs:documentation>Independent flight information for a guest.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RecordID" type="RecordID" minOccurs="0"/>
			<xs:element name="GuestRefs" type="GuestRefs"/>
			<xs:element name="SegmentKind" type="SegmentKind" minOccurs="0"/>
			<xs:element name="EffectiveDate" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="Flights" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Flight" type="IndependentFlightInfo" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
			<xs:element name="MatchResults" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AirPointCode" type="AirPointCode" minOccurs="0"/>
						<xs:element name="ErrorCodes" minOccurs="0">
							<xs:simpleType>
								<xs:list itemType="MismatchCode"/>
							</xs:simpleType>
						</xs:element>
						<xs:element name="ErrorsAreAcknowledged" type="Boolean">
							<xs:annotation>
								<xs:documentation>'Y' - match errors have been reviewed by users and can be ignored from now on. The match process will be repeated if/when Air Point information changes on the booking,  an Air Booking update is received from the Air system or Flight Information is updated for the Independent record.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResAirIndependents">
		<xs:annotation>
			<xs:documentation>Array of ResAirIndependent.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResAirIndependent" type="ResAirIndependent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResAirActual">
		<xs:annotation>
			<xs:documentation>Actual Air information related to the current booking. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ActualAirData"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ResAirActuals">
		<xs:annotation>
			<xs:documentation>Array of ResAirActual.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResAirActual" type="ResAirActual" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="TransportDirection">
		<xs:annotation>
			<xs:documentation>Transportation direction: IN and RET.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="Code">
			<xs:enumeration value="OUT"/>
			<xs:enumeration value="RET"/>
			<xs:enumeration value="INT"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TransportType">
		<xs:annotation>
			<xs:documentation>Transportation type: AIR, BUS or RAIL.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="Code">
			<xs:enumeration value="AIR"/>
			<xs:enumeration value="BUS"/>
			<xs:enumeration value="RAIL"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TransportMode">
		<xs:annotation>
			<xs:documentation>Transportation request type: REGULAR, DEVIATION or INDEPENDENT.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="Code">
			<xs:enumeration value="REGULAR"/>
			<xs:enumeration value="DEVIATION"/>
			<xs:enumeration value="INDEPENDENT"/>
			<xs:enumeration value="INTRO_PKG"/>
			<xs:enumeration value="ESEAAIR"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DeviationStatus">
		<xs:annotation>
			<xs:documentation>Deviation status.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="Code">
			<xs:enumeration value="REJECTED"/>
			<xs:enumeration value="PREPARING"/>
			<xs:enumeration value="PENDING"/>
			<xs:enumeration value="APPROVED"/>
			<xs:enumeration value="CONFIRMED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="ResTransportations">
		<xs:annotation>
			<xs:documentation>A list of transportations on the reservation (ignored in input messages)</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ResTransportation" type="ResTransportation" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ResTransportation">
		<xs:annotation>
			<xs:documentation>Describes transportation option for group of guests. It only applies 	to air-like transfers to the first location of vacation itinerary and from the last location of the itinerary.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Default - all guests.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="TransportType" default="AIR" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mode" type="TransportMode" default="REGULAR" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DevStatus" type="DeviationStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated only if Mode = 'DEVIATION'. </xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsActive" type="Boolean" default="Y">
				<xs:annotation>
					<xs:documentation>Used to distinguish pending deviation requests from currently active ones. Only one active transportation request is allowed for each guest.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GatewayOut" type="AirportCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gateway of departure (start of the vacation).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DestGatewayOut" type="AirportCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Destination gateway (start of the vacation)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GatewayRet" type="AirportCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gateway of arrival (end of the vacation).</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DestGatewayRet" type="AirportCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Gateway of departure (end of the vacation)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NofSeats" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of seats: 0 - for an infant, 2 - for a very large person. Default - 1.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="0"/>
						<xs:maxInclusive value="2"/>
						<xs:totalDigits value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Segments" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Required for 'DEVIATION' and 'INDEPENDENT' requests.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Segment" type="TransportSegment" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ActualItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Leg" type="TransportationLeg" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="TransportSegment">
		<xs:annotation>
			<xs:documentation>Transportation request segment</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="SeqN" type="SeqNumber" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Direction" type="TransportDirection" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Carrier" type="Airline" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Flight" type="FlightNo" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Departure">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Airport" type="AirportCode">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="ActualTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Arrival">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Airport" type="AirportCode">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="ActualTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="TransportationLeg">
		<xs:annotation>
			<xs:documentation>Transportation itinerary leg</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="SeqN" type="SeqNumber">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Direction" type="TransportDirection" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MarketingCarrier" type="Airline">
				<xs:annotation>
					<xs:documentation>2-letter Marketing carrier</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperatingCarrier" type="Airline" minOccurs="0">
				<xs:annotation>
					<xs:documentation>operating carrier code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Flight" type="FlightNo">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Departure">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Airport" type="AirportCode">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="ActualTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Arrival">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="Airport" type="AirportCode">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="ActualTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="IsCharter" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmadeusRecLoc" type="RecLoc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amadeus Record Locator code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AirlineRecLoc" type="RecLoc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Airline Record Locator code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Clos" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Booking Class of Service</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="2"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MealType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Meal type provided in flight</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="1"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="EquipType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Aircraft Type code </xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="3"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StopsQty" type="xs:nonNegativeInteger" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of stops for this leg</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeatNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Seat assignement</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TicketNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>13 digit ticket number xxx-xxxxxxxxxx</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:list itemType="xs:string"/>
				</xs:simpleType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<!--===================================  Accounting related items-->
	<xs:complexType name="ResChargeableAction">
		<xs:annotation>
			<xs:documentation>Description of a chargeable action and charges associated with
				it.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="ResID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines ResID for delegates. Output only</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ActionCode" type="LongCode">
				<xs:annotation>
					<xs:documentation>Examples: 'FULL CANCELLATION', 'GUEST CANCELLATION', 'AIR
						DEVIATION', etc.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsManual" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Charges" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Charge" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="ChargeCode" type="Code">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="State" type="ResChargeState" default="ACTIVE">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="Money">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="CalculatedAmount" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Can be different from AMOUNT in case
												of manual adjustment.</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="AmountPaid" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used in 040808 and 041113
												versions</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="InvoiceHdrID" type="RecordID" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Link to the invoice header</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AmountInHdrCurrency" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Amount in currency defined in the linked invoice header</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Commissions" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Output only</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Commission" minOccurs="0" maxOccurs="unbounded">
													<xs:annotation>
														<xs:appinfo source="Versonix">
															<XMLBridge>Implemented</XMLBridge>
														</xs:appinfo>
													</xs:annotation>
													<xs:complexType>
														<xs:all>
															<xs:element name="RecordID" type="RecordID" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>To Be Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Code" type="CommissionCode">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Source">
																<xs:annotation>
																	<xs:documentation>Short reference to the setup,
												which was used to calculate this
												commission.</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="xs:string">
																		<xs:maxLength value="50"/>
																		<xs:whiteSpace value="collapse"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:element>
															<xs:element name="Amount" type="Money">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="CmsPercent" type="Percent" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="CmsFare" type="Money" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Commissionable fare used for calculations.</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="IsManualAdj" type="Boolean" default="N">
																<xs:annotation>
																	<xs:documentation>If 'Y' - commission amount was
												manually adjusted.</xs:documentation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
														</xs:all>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="CommissionPaid" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used in 040808 and 041113
												versions</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="Comments" type="ShortComment" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="DesignatedPaymentCode" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Allows to associate charges with specific payments through a code calculated by payment schedule rules for booking components (e.g. air or shorex).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Details" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Explanatory details on how and why the
												charge was calculated.</xs:documentation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Detail" minOccurs="0" maxOccurs="unbounded">
													<xs:annotation>
														<xs:appinfo source="Versonix">
															<XMLBridge>Implemented</XMLBridge>
														</xs:appinfo>
													</xs:annotation>
													<xs:complexType>
														<xs:all>
															<xs:element name="GuestSeqN" type="GuestSeqN" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="ClientID" type="RecordID" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Amount" type="Money" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Explanation" type="ShortComment" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="BizArea" type="LongCode" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Origin" type="Code" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
															<xs:element name="Basis" type="Code" minOccurs="0">
																<xs:annotation>
																	<xs:appinfo source="Versonix">
																		<XMLBridge>Implemented</XMLBridge>
																	</xs:appinfo>
																</xs:annotation>
															</xs:element>
														</xs:all>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResCommissItem">
		<xs:annotation>
			<xs:documentation>Detailed commission item.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestSeqN" type="GuestSeqN">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PackageID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="CommissionCode">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="CommissionCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CmsPercent" type="Percent" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Source" type="SourceComponent" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SetupRef">
				<xs:annotation>
					<xs:documentation>Short reference to the setup, which was used to calculate this
						commission.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="InvoiceItemType" type="InvoiceItemType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Populated only if commission calculation was based on a single
						invoice item type.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CmsFare" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Commissionable fare used for calculations.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsManualAdj" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If 'Y' - commission amount was manually
						adjusted.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceHdrID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to the invoice header</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to the source product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountInHdrCurrency" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount in currency defined in the linked invoice header</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResInvoiceAdjItem">
		<xs:annotation>
			<xs:documentation>Manual adjustment for invoice items.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs" minOccurs="0"/>
			<xs:element name="ComponentReference" type="ComponentReference" minOccurs="0"/>
			<xs:element name="InvoiceItemType" type="InvoiceItemType"/>
			<xs:element name="SubType1" type="InvoiceItemSubType" minOccurs="0"/>
			<xs:element name="Amount" type="Money"/>
			<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
			<xs:element name="IsActive" type="Boolean" default="Y" minOccurs="0"/>
			<xs:element name="IsFinal" type="Boolean" default="N" minOccurs="0"/>
			<xs:element name="RateProtectionMode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If set - adjustment was added automatically based on user command to protect prices on certain level.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="Code">
						<xs:enumeration value="UPPER LIMIT">
							<xs:annotation>
								<xs:documentation>The Amount element defines upper limit fo
									corresponding invoice total</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="LOWER LIMIT">
							<xs:annotation>
								<xs:documentation>The Amount element defines lower limit fo
									corresponding invoice total</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="FIXED">
							<xs:annotation>
								<xs:documentation>The Amount element defines fixed (exact) value fo
									corresponding invoice total</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="ADJUSTMENT">
							<xs:annotation>
								<xs:documentation>The amount element defines one-time adjustment
									calculated based on some business policies (sail change
									initiated by cruise line, for example)</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Origin" type="InvoiceAdjOrigin" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be set for adjustments added automatically (not for rate protection adjustments)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvoiceHdrID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to the invoice header</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to the source product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountInHdrCurrency" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount in currency defined in the linked invoice header</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResInvoiceItem">
		<xs:annotation>
			<xs:documentation>Detailed price item.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestSeqN" type="GuestSeqN">
				<xs:annotation>
					<xs:documentation>Reference to guest this invoice item is applied to</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Source" type="SourceComponent">
				<xs:annotation>
					<xs:documentation>Reservation component this invoice item relates to</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="InvoiceItemType">
				<xs:annotation>
					<xs:documentation>Invoice Item Type (must be setup in SeaWare)</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubType1" type="InvoiceItemSubType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Invoice item subtype 1</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubType2" type="InvoiceItemSubType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Invoice item subtype 2</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubType3" type="InvoiceItemSubType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Invoice item subtype 3</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money">
				<xs:annotation>
					<xs:documentation>Invoice item amount</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PricePerUnit" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="10"/>
						<xs:fractionDigits value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="NofUnits" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:totalDigits value="11"/>
						<xs:fractionDigits value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Percent" type="Percent" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromoCode" type="PromotionCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CmsPercent" type="Percent" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Commission percent.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceArea" type="PriceArea" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExtendedInfo" type="InvoiceExtInfo" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdjOrigin" type="InvoiceAdjOrigin" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Adjustment Origin. Output only</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResPaymentSchedule">
		<xs:annotation>
			<xs:documentation>Payment schedule.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Extension" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="DurationBasis" type="DurationBasis" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="Duration" type="Count" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckNum" minOccurs="0">
							<xs:annotation>
								<xs:documentation>For the 'Check is in the mail'
									situation.</xs:documentation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="30"/>
									<xs:whiteSpace value="collapse"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="Comments" type="ShortComment" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>ToBeImplemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="ResPaySchItem" type="ResPaySchItem" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResPaySchItem">
		<xs:annotation>
			<xs:documentation>Payment Schedule item.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestSeqN" type="GuestSeqN" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
					<xs:documentation>Ignored in input messages</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DueType" type="DueType">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DueDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>"Official" due date.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpirationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Actual due date used by the system (may include a grace
						period). This element is populated only if session security settings permit
						that.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
					<xs:documentation>Amount can be skipped for Final Payment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DesignatedPaymentCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows to have separate payment schedule for different components (e.g. air or shorex)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<!--===================================  -->
	<xs:complexType name="MarketingMessage">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="MessageID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Priority" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Command" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FColor" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Foreground color</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BColor" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Background color</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="LongCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Implemented in 041113 only. Contains setup code that can be used to adjust UI.</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResPointsItem">
		<xs:all>
			<xs:element name="AccountNumber" type="ClubAccountNumber">
				<xs:annotation>
					<xs:documentation>Club Account earning/using points</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestSeqN" type="GuestSeqN">
				<xs:annotation>
					<xs:documentation>Reference to guest this item applies to</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Source" type="SourceComponent">
				<xs:annotation>
					<xs:documentation>Reservation component earning/using points</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointType" type="LongCode">
				<xs:annotation>
					<xs:documentation>Type of points</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money">
				<xs:annotation>
					<xs:documentation>Amount of points</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Money" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Currency equivalent of earned points.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="UserNote">
		<xs:annotation>
			<xs:documentation>Res.User Notes representation</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="RecordID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subject" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Notes" type="LongComment" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedAt" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChangedAt" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="User" type="OracleUsername" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Attributes" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Attribute" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:appinfo source="Versonix">
									<XMLBridge>Implemented</XMLBridge>
								</xs:appinfo>
							</xs:annotation>
							<xs:complexType>
								<xs:all>
									<xs:element name="Code">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:maxLength value="30"/>
												<xs:whiteSpace value="collapse"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
									<xs:element name="Comments" type="ShortComment" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="Versonix">
												<XMLBridge>Implemented</XMLBridge>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:all>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="AuthorizationCodeItem">
		<xs:annotation>
			<xs:documentation>Res.Authorization Codes representation</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="Code" type="LongCode"/>
			<xs:element name="UserID" type="OracleUsername" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResCoupon">
		<xs:annotation>
			<xs:documentation>Coupon that has been applied (or should be applied) to the Booking</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="SeqN" type="SeqNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the order of applying discount coupons</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CouponID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserDefinedCouponID" type="LongCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuestSeqN" type="SeqNumber">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComponentReference" type="ComponentReference" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CouponClass" type="CouponClass" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Output only that is calculated by business
						rules</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="VacationInfo">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>ToBeImplemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs"/>
			<xs:element name="SailRange" type="DateTimeRange" minOccurs="0"/>
			<xs:element name="VacationRange" type="DateTimeRange" minOccurs="0"/>
			<xs:element name="VacationNoAirRange" type="DateTimeRange" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ResCostItem">
		<xs:all>
			<xs:element name="ItemName" type="ShortComment"/>
			<xs:element name="Value" type="Money" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="ComponentReference">
		<xs:annotation>
			<xs:documentation>Reference to some reservation component</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:choice>
			<xs:element name="PackageID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Reference to primary package component (globally by PACKAGE_ID
						in PACKAGE_DEFINITION))</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Air">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="HeaderID" type="RecordID">
							<xs:annotation>
								<xs:documentation>Corresponds to ResAirActual.RecordID</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SegmentID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Actual Air Segment ID, mandatory if used as input in promotions</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RoomSeqN" type="HotelRoomSeqN">
				<xs:annotation>
					<xs:documentation>Reference to hotel room component within
						reservation</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiningReqID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Reference to dining request within
						reservation</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="CarDeckRequest">
					<xs:annotation>
						<xs:documentation>Reference to car deck request within
							reservation</xs:documentation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
					<xs:complexType>
						<xs:all>
							<xs:element name="CarDeckReqID" type="RecordID">
								<xs:annotation>
									<xs:documentation>Car deck request ID</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="LegSeqN" type="SeqNumber">
								<xs:annotation>
									<xs:documentation>Sail leg definition within this car deck
										request</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="Cargo" type="Boolean">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="ShipRoomReqID" type="RecordID">
				<xs:annotation>
					<xs:documentation>Reference to conference room request within
						reservation</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalComponent">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SystemName" type="ComponentType">
							<xs:annotation>
								<xs:documentation>Component Type, original Component Type=EXTERNAL
									implemented)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExtID">
							<xs:annotation>
								<xs:documentation>Reference to the external component</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Addon">
				<xs:annotation>
					<xs:documentation>Reference to addon</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="AddonCode" type="AddonCode">
							<xs:annotation>
								<xs:documentation>Addon code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AddonIDs" type="RecordIDList" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									<xhtml:span class="attention">Output only</xhtml:span>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PackageID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Populated only if add-on is part of a booked
									package.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DateTimeRange" type="OpenDateTimeRange" minOccurs="0"/>
						<xs:element name="DeliveryPlace" type="Code" minOccurs="0"/>
						<xs:element name="DeliveryPlaceDetail" type="ShortComment" minOccurs="0"/>
						<xs:element name="LinkedRequest" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Reservation component this addon is linked
									to</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="ShipRoomReqID" type="RecordID">
										<xs:annotation>
											<xs:documentation>Reference to conference room
												request</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DiningReqID" type="RecordID">
										<xs:annotation>
											<xs:documentation>Reference to dining
												request</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="SourceComponent">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:choice>
			<xs:sequence>
				<xs:element name="PackageID" type="RecordID">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="CabinSeqN" type="SeqNumber" minOccurs="0">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>ToBeImplemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="Air">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="HeaderID" type="RecordID">
							<xs:annotation>
								<xs:documentation>Corresponds to ResAirActual.RecordID</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SegmentID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Can be omitted if this is a reference to the whole Air Booking, not to a specific segment.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RoomSeqN" type="HotelRoomSeqN">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExternalComponent">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SystemName" type="ComponentType">
							<xs:annotation>
								<xs:documentation>Component Type, original Component Type=EXTERNAL
									implemented)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExtID">
							<xs:annotation>
								<xs:documentation>Reference to the external component</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="100"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Addon">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>ToBeImplemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexType>
					<xs:all>
						<xs:element name="GuestSeqN" type="GuestSeqN"/>
						<xs:element name="AddonID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>output only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ParentAddonID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>output only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AddonCode" type="AddonCode"/>
						<xs:element name="PackageID" type="RecordID" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Populated if add-on can be associated with some
									other primary package. Not populated, for example, for
									standalone addons on a separate booking.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DateTimeRange" type="OpenDateTimeRange" minOccurs="0"/>
						<xs:element name="DeliveryPlace" type="Code" minOccurs="0"/>
						<xs:element name="DeliveryPlaceDetail" type="ShortComment" minOccurs="0"/>
						<xs:element name="Quantity" type="Quantity" default="1" minOccurs="0"/>
						<xs:element name="PromoCode" type="PromotionCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Output information only</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LinkedRequest" minOccurs="0">
							<xs:complexType>
								<xs:choice>
									<xs:element name="ShipRoomReqID" type="RecordID"/>
									<xs:element name="DiningReqID" type="RecordID"/>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:all>
				</xs:complexType>
			</xs:element>
			<xs:element name="Comments" type="ShortComment">
				<xs:annotation>
					<xs:documentation>Provided for InvoiceChange related package</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<!--=============================================== Air-->
	<xs:simpleType name="FareKind">
		<xs:annotation>
			<xs:documentation>Fare Kind (Category): Published or Negotiated</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PUBLISHED"/>
			<xs:enumeration value="NEGOTIATED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SearchFareKind">
		<xs:annotation>
			<xs:documentation>Fare Kind to be used as input search parameter: Default, Published, Negotiated or Both.
'Default' means that used fare types should be determined by the setup on the Air system side.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DEFAULT"/>
			<xs:enumeration value="PUBLISHED"/>
			<xs:enumeration value="NEGOTIATED"/>
			<xs:enumeration value="BOTH"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SearchReference">
		<xs:annotation>
			<xs:documentation>Generated code of an Air Search operation, which can be used to request additional response rows.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ItineraryReference">
		<xs:annotation>
			<xs:documentation>Generated code of an itinerary row in the AirFlightSearch_OUT message. It should be used in the AirSelect_IN message.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PaxRefID">
		<xs:annotation>
			<xs:documentation>Unique passenger reference. Basically it is associated with a vacation of a given person (Client ID). PaxRefID can be preserved when moving guest from one cruise booking to another, which will allow preservation of Air bookings for that guest.

Negative PaxRefID can be generated for guests in temporary bookings even without Client ID. However, they will not be converted to positive ones during Store unless Client ID is set. Negative PaxRefID are unique within current session only, not globally.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="RecordID"/>
	</xs:simpleType>
	<xs:simpleType name="PaxRefs">
		<xs:annotation>
			<xs:documentation>List of globally unique passenger references.</xs:documentation>
		</xs:annotation>
		<xs:list itemType="PaxRefID"/>
	</xs:simpleType>
	<xs:complexType name="Passenger">
		<xs:sequence>
			<xs:element name="PaxRefID" type="PaxRefID"/>
			<xs:element name="BasePaxID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>In case of mismatch between passenger info coming from the Air system and Seaware, the passeger info known to the Air system is preserved in records with BASE_PAX_ID pointing to the record with current passenger info in Seaware. Seaware always sends nvl(BASE_PAX_ID,PAX_ID) as PAX_ID to the Air system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResID" type="RecordID" minOccurs="0"/>
			<xs:element name="GuestID" type="RecordID" minOccurs="0"/>
			<xs:element name="ClientID" type="RecordID" minOccurs="0"/>
			<xs:element name="LastName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="FirstName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="MiddleName" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="30"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Title" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Suffix" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="50"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BirthDate" type="xs:date" minOccurs="0"/>
			<xs:element name="Gender" type="Gender" minOccurs="0"/>
			<xs:element name="OriginInfo" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="255"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Comments" type="ShortComment" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Passenger" type="Passenger"/>
	<xs:complexType name="PassengerWithParent">
		<xs:complexContent>
			<xs:extension base="Passenger">
				<xs:sequence>
					<xs:element name="ParentRefID" type="PaxRefID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>PaxRefID of the parent on the same Air Booking.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:group name="GuestOrPax">
		<xs:choice>
			<xs:element name="GuestID" type="RecordID"/>
			<xs:element name="PaxRefID" type="PaxRefID">
				<xs:annotation>
					<xs:documentation>The GuestID node is replaced with PaxRefID prior to storing of the data in the database in order to eliminate dependency on Guest ID.
When data is read from the database, the system tries to translate PaxRefID back to GuestID. That may fail if given air passenger is no longer on any of cruise bookings, in which case PaxRefID stays in the XML.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="ParentOrPax">
		<xs:choice>
			<xs:element name="ParentID" type="RecordID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Guest ID of an adult for children</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParentRefID" type="PaxRefID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The ParentID node is replaced with ParentRefID prior to storing of the data in the database in order to eliminate dependency on Guest ID.
When data is read from the database, the system tries to translate ParentRefID back to ParentID. That may fail if given air passenger is no longer on any of cruise bookings, in which case ParentRefID stays in the XML.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:simpleType name="AirPointCode">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="2016-05-31_PORT_MIA_ARR"/>
					<altova:example value="2016-06-07_PORT_MIA_DEP"/>
					<altova:example value="VACATION_START"/>
					<altova:example value="VACATION_END"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Generated code of an "Air Point" - a point in the cruise itinerary where air transportation is possible or expected.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AirPriceCode">
		<xs:annotation>
			<xs:appinfo>
				<altova:exampleValues>
					<altova:example value="2016-05-31_PORT_MIA_ARR"/>
					<altova:example value="2016-06-07_PORT_MIA_DEP"/>
				</altova:exampleValues>
			</xs:appinfo>
			<xs:documentation>Internal code of price item extracted from response of the Air system.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ActualAirStatus">
		<xs:annotation>
			<xs:documentation>The status of an Actual Air record.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="AVAILABLE"/>
			<xs:enumeration value="SELECTED">
				<xs:annotation>
					<xs:documentation>This is an in-memory record, which was added to ResShell as a result of the AirSelect call. The air is going to be actually booked during execution of the StoreBooking call.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BOOKED">
				<xs:annotation>
					<xs:documentation>Successfully booked in the Air Reservation System</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CANCELLED"/>
			<xs:enumeration value="REJECTED">
				<xs:annotation>
					<xs:documentation>Successfully booked in the Air Reservation System but rejected by Seaware validation rules</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AirBookingID">
		<xs:annotation>
			<xs:documentation>The Air Booking ID in the external Air system.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MismatchCode">
		<xs:annotation>
			<xs:documentation>Error codes describing different mismatches between an actual air record and cruise booking</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SegmentKind">
		<xs:annotation>
			<xs:documentation>Segment Kind: Outbound, Return or Inner</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="OUTBOUND"/>
			<xs:enumeration value="RETURN"/>
			<xs:enumeration value="INNER"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PaxSeatReq">
		<xs:annotation>
			<xs:documentation>The Passenger Seat Request represents parent/child links and requested number of seats</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="GuestOrPax"/>
			<xs:group ref="ParentOrPax" minOccurs="0"/>
			<xs:element name="NofSeats" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Requested number of seats: 0 - infant without seat, 1 - the seat is requested regardless of age, 2 - an extra seat is requested.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="0"/>
						<xs:maxInclusive value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PaxSeatReqs">
		<xs:annotation>
			<xs:documentation>Array of PaxSeatReq</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PaxSeatReq" type="PaxSeatReq" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IndependentFlightInfo">
		<xs:annotation>
			<xs:documentation>Independent flight information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LegID" type="RecordID" minOccurs="0"/>
			<xs:element name="LegSeqN" type="xs:positiveInteger"/>
			<xs:element name="RecLoc" type="RecLoc" minOccurs="0"/>
			<xs:element name="Airline" type="Airline" minOccurs="0"/>
			<xs:element name="FlightNo" type="FlightNo" minOccurs="0"/>
			<xs:element name="DepartureDateTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="DepartureAirport" type="AirportCode" minOccurs="0"/>
			<xs:element name="ArrivalDateTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="ArrivalAirport" type="AirportCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StopOver">
		<xs:annotation>
			<xs:documentation>Defines a stop-over, which can happen prior to arrival to the starting location of the vacation or after departure from final location at the end of the vacation.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Start" type="TimeAndLocationOpt" minOccurs="0"/>
			<xs:element name="End" type="TimeAndLocationOpt" minOccurs="0"/>
			<xs:element name="Comment" type="ShortComment" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="HomeLocationType">
		<xs:annotation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
			<xs:documentation>Location Types allowed for the Home location (subset of LocationType values).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="15"/>
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="CITY"/>
			<xs:enumeration value="PORT"/>
			<xs:enumeration value="AIRPORT"/>
			<xs:enumeration value="HOTEL"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AirFlightPrefs">
		<xs:annotation>
			<xs:documentation>Type of flights allowed</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ANY"/>
			<xs:enumeration value="NONSTOP-ONLY"/>
			<xs:enumeration value="DIRECT-ONLY"/>
			<xs:enumeration value="1-STOP-OR-LESS"/>
			<xs:enumeration value="2-STOPS-OR-LESS"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="HomeLocation">
		<xs:annotation>
			<xs:documentation>Defines 'Home' location: departure location for an outbound flight or arrival location for a return flight.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:sequence>
				<xs:element name="Type" type="HomeLocationType">
					<xs:annotation>
						<xs:documentation>See enumeration.</xs:documentation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="Code" type="Code">
					<xs:annotation>
						<xs:documentation>Depends on TYPE, for example, for TYPE = 'AIRPORT', CODE could be set to 'DFW', 'SFO', 'MIA', etc.</xs:documentation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="MultiAirportInd" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If Y - the Air system will use other airports associated with this one. The typical examples are JFK/LGW/EWR and SFO/SJC/OAK.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Radius" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides a Radius in miles from Airport to include other nearby airports in the search</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirportOption">
		<xs:annotation>
			<xs:documentation>Defines a possible arrival or departure airport along with its relative priority.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Airport" type="AirportCode"/>
			<xs:element name="Priority" type="xs:int" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CalculatedArrOption">
		<xs:annotation>
			<xs:documentation>Defines a possible arrival airport along with the latest time to arrive there.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AirportOption">
				<xs:sequence>
					<xs:element name="Latest" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>The latest possible time for the flight to arrive to this airport in order to make it to the cruise.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Earliest" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The earliest time for the flight to arrive to this airport due to business (package) restrictions.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculatedDepOption">
		<xs:annotation>
			<xs:documentation>Defines a possible departure airport along with the earliest time to depart from there.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AirportOption">
				<xs:sequence>
					<xs:element name="Earliest" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>The earliest possible time for the flight to depart from this airport considering ship arrival time and the transfer time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Latest" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The latest time for the flight to depart from this airport due to business (package) restrictions.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LocationComponent">
		<xs:annotation>
			<xs:documentation>Describes a location, which is part of cruise booking itinerary, with reference to a component where it was defined.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Location" type="Location"/>
			<xs:choice>
				<xs:element name="Date" type="xs:date"/>
				<xs:element name="DateTime" type="xs:dateTime"/>
			</xs:choice>
			<xs:element name="Component" type="ComponentReference"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CalculatedDepartureLocation">
		<xs:annotation>
			<xs:documentation>Defines a possible departure location for an air travel related to given cruise itinerary</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="LocationComponent">
				<xs:sequence>
					<xs:element name="DepartAfter" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Option" type="CalculatedDepOption" minOccurs="0" maxOccurs="unbounded"/>
								<xs:element name="Earliest" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The earliest possible time to depart from Location directly - not from associated airpports.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculatedArrivalLocation">
		<xs:annotation>
			<xs:documentation>Defines a possible arrival location for an air travel related to given cruise itinerary</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="LocationComponent">
				<xs:sequence>
					<xs:element name="ArriveBy" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Option" type="CalculatedArrOption" minOccurs="0" maxOccurs="unbounded"/>
								<xs:element name="Latest" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The latest possible time to arrive to Location directly - not from associated airpports.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BaseAirPreferences">
		<xs:annotation>
			<xs:documentation>Collection of air preference fields</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AirCabinClass" type="AirCabinClass" default="ECONOMY" minOccurs="0"/>
			<xs:element name="SeatLoc" type="SeatLoc" minOccurs="0"/>
			<xs:element name="SeatType" type="SeatType" minOccurs="0"/>
			<xs:element name="MealType" type="MealType" minOccurs="0"/>
			<xs:element name="Wheelchair" type="Boolean" default="N" minOccurs="0"/>
			<xs:choice>
				<xs:sequence>
					<xs:element name="PreferAirlines" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of preferred airlines</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="Airline"/>
						</xs:simpleType>
					</xs:element>
					<xs:element name="ExcludeAirlines" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of excluded airlines</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:list itemType="Airline"/>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
				<xs:element name="MandatoryAirlines" minOccurs="0">
					<xs:annotation>
						<xs:documentation>List of mandatory airlines</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list itemType="Airline"/>
					</xs:simpleType>
				</xs:element>
			</xs:choice>
			<xs:element name="FlightPrefs" type="AirFlightPrefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of flights allowed for the certain segment</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BaseGuestAirPreferences">
		<xs:complexContent>
			<xs:extension base="BaseAirPreferences">
				<xs:sequence>
					<xs:group ref="GuestOrPax"/>
					<xs:group ref="ParentOrPax" minOccurs="0"/>
					<xs:element name="NofSeats" default="1" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Requested number of seats: 0 - infant without seat, 1 - the seat is requested regardless of age, 2 - an extra seat is requested.</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minInclusive value="0"/>
								<xs:maxInclusive value="2"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AirlineFlightNumber">
		<xs:annotation>
			<xs:documentation>Airline + Flight Number</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Airline" type="Airline"/>
			<xs:element name="FlightNo" type="FlightNo"/>
			<xs:element name="IsMandatory" type="Boolean" default="N" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirlineFlightNumbers">
		<xs:annotation>
			<xs:documentation>Array of AirlineFlightNumber</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Flight" type="AirlineFlightNumber" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BaseAirSearchParams">
		<xs:annotation>
			<xs:documentation>Air search parameters common for all types of segments (outbound and return)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GuestPrefs" type="BaseGuestAirPreferences" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Overrides for global guest preferences, which are specific for given segment. Only guests, which were defined in AirSearchParams.Guests, can be used here.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HomeLocation" type="HomeLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Mandatory for Outbound or oneway Return</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Flights" type="AirlineFlightNumbers" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="ExtraDays">
					<xs:annotation>
						<xs:documentation># of additional days for each guest in PaxRefs.
For Outbound segments this number is subtracted from the expected arrival date (early arrival).
For Return segments this number is added to the expected departure date (delayed departure).</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:list itemType="xs:nonNegativeInteger"/>
					</xs:simpleType>
				</xs:element>
				<xs:element name="StopOvers">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="StopOver" type="StopOver" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>For omitted Location and Date/Time values the system will try to use a "sensible" default. For example, the end location is assumed to be the same one as the start one and vice versa. The end dates can be determined by the next start date (or vacation date), etc.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirSearchParamsOutbound">
		<xs:annotation>
			<xs:documentation>Air search parameters for an outbound segment</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseAirSearchParams">
				<xs:sequence>
					<xs:element name="DepartureDate" type="xs:date" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If omitted - the departure date is determined automatically based on the cruise itinerary</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Arrival" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Option" type="CalculatedArrOption" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>Possible arrival options taken from corresponding Air Point</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Override" minOccurs="0">
									<xs:annotation>
										<xs:documentation>An override for arrival airport. By default arrival options are determined by the corresponding Air Point.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Airport" type="AirportCode"/>
											<xs:element name="Latest" type="xs:dateTime" minOccurs="0"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AirSearchParamsInner">
		<xs:annotation>
			<xs:documentation>AIr search parameters for intra-package segments</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="InnerItem" maxOccurs="unbounded">
				<xs:complexType>
					<xs:all>
						<xs:element name="DepartureAirport" type="AirportCode"/>
						<xs:element name="ArrivalAirport" type="AirportCode"/>
						<xs:element name="Earliest" type="xs:dateTime"/>
						<xs:element name="Latest" type="xs:dateTime"/>
						<xs:element name="ResID" type="RecordID"/>
						<xs:element name="PaxIDs" type="PaxRefs"/>
					</xs:all>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirSearchParamsReturn">
		<xs:annotation>
			<xs:documentation>Air search parameters for a return segment (one-way)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseAirSearchParams">
				<xs:sequence>
					<xs:element name="Departure" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Option" type="CalculatedDepOption" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>Possible departure options taken from corresponding Air Point</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Override" minOccurs="0">
									<xs:annotation>
										<xs:documentation>An override for departure airport. By default departure options are determined from the corresponding Air Point.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Airport" type="AirportCode"/>
											<xs:element name="Earliest" type="xs:dateTime" minOccurs="0"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AirSearchParams">
		<xs:annotation>
			<xs:documentation>Combined air search parameters. For the round-trip search both Outbound and Return elements must be present.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResIDs" type="RecordIDList">
				<xs:annotation>
					<xs:documentation>IDs of cruise reservations, which guests are participate in the search. Multiple Res IDs can be used in the 'Travel With' scenario, when guests from different cruise bookings want to fly together.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FareKind" type="SearchFareKind" default="DEFAULT" minOccurs="0"/>
			<xs:element name="FlightPrefs" type="AirFlightPrefs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Default type of flights allowed for the entire trip</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Guests">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Guest" type="BaseGuestAirPreferences" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:choice>
				<xs:sequence>
					<xs:element name="Outbound" type="AirSearchParamsOutbound"/>
					<xs:element name="Return" type="AirSearchParamsReturn" minOccurs="0"/>
				</xs:sequence>
				<xs:element name="Return" type="AirSearchParamsReturn"/>
				<xs:element name="Inner" type="AirSearchParamsInner"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AirSearchParamsV0" type="AirSearchParams">
		<xs:annotation>
			<xs:documentation>Air search parameters stored in the database. In case of future incompatible changes in the schema this element definition should be preserved.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ActualAirSegment">
		<xs:annotation>
			<xs:documentation>Actual Air Segment information received from the external Air system (corresponds to t_AirSegmentInfo in Amadeus API)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SegmentID" type="RecordID"/>
			<xs:element name="SegmentSeqN" type="xs:positiveInteger"/>
			<xs:element name="SegmentKind" type="SegmentKind" minOccurs="0"/>
			<xs:element name="AirCabinClass" type="AirCabinClass" minOccurs="0"/>
			<xs:element name="Legs">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Leg" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="LegID" type="RecordID" minOccurs="0"/>
									<xs:element name="LegSeqN" type="xs:positiveInteger"/>
									<xs:element name="Airline" type="Airline"/>
									<xs:element name="OperatedByAirline" type="Airline" minOccurs="0"/>
									<xs:element name="FlightNo" type="FlightNo"/>
									<xs:element name="Aircraft" type="Aircraft" minOccurs="0"/>
									<xs:element name="DepartureDateTime" type="xs:dateTime"/>
									<xs:element name="DepartureAirport" type="AirportCode"/>
									<xs:element name="ArrivalDateTime" type="xs:dateTime"/>
									<xs:element name="ArrivalAirport" type="AirportCode"/>
									<xs:element name="AirCabinClass" type="AirCabinClass" minOccurs="0"/>
									<xs:element name="CLOS" type="AirlineCLOS" minOccurs="0"/>
									<xs:element name="NumberOfStops" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number of stops in the flight</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="FlyingTime" type="xs:duration" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The amount of flying time of the leg</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="FlightMealCode" type="FlightMealCode" minOccurs="0"/>
									<xs:element name="NumberOfSeats" type="xs:positiveInteger" minOccurs="0"/>
									<xs:element name="CodeShareInfo" type="FlightCodeShareInfo" minOccurs="0"/>
									<xs:element name="CngAircraft" type="Aircraft" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Change of gauge - aircraft</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CngAirport" type="AirportCode" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Change of gauge - airport</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="BaggageLink" minOccurs="0">
										<xs:annotation>
											<xs:documentation>URL link formatted to provide a link for baggage information corresponding to the most significant carrier</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ElapsedTime" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The total amount of elapsed time of the segment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PreviouslyBooked" type="Boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Boolean to indicate that Segment corresponds to a previously booked itinerary. Populated only if there was a previously booked itinerary for at least one of the guests for the same air point.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LegRef">
		<xs:annotation>
			<xs:documentation>Reference to a specific leg in the actual air itinerary</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SegmentSeqN" type="xs:positiveInteger"/>
			<xs:element name="LegSeqN" type="xs:positiveInteger"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LegRefs">
		<xs:annotation>
			<xs:documentation>Array of LegRef</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LegRef" type="LegRef" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirCostItem">
		<xs:sequence>
			<xs:element name="PaxRefs" type="PaxRefs"/>
			<xs:element name="RecordIDs" type="RecordIDList" minOccurs="0"/>
			<xs:element name="SegmentSeqN" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If missing - this cost item is associated with the whole air booking, not with individual segment/leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegSeqN" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Can be present only if SegmentSeqN is present. If missing and SegmentSeqN is present - this cost item is associated with the whole air segment, not with individual leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceCode" type="AirPriceCode"/>
			<xs:element name="PriceCode2" type="AirPriceCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used for example for Tax Codes and Price Adjustment code. In these cases PriceCode = 'TAX' or "ADJUSTMENT' while PriceCode2 contains a more deatiled value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountPerPax" type="Money"/>
			<xs:element name="TotalAmount" type="Money"/>
			<xs:element name="CurrencyCode" type="CurrencyCode" minOccurs="0"/>
			<xs:element name="ExchangeRate" type="xs:double" minOccurs="0"/>
			<xs:element name="ExchCurrency" type="CurrencyCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The currency code that the exchange rate applies to.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirTicket">
		<xs:annotation>
			<xs:documentation>AIr ticket information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RecordID" type="RecordID" minOccurs="0"/>
			<xs:element name="PaxRefID" type="PaxRefID"/>
			<xs:element name="RecLoc" type="RecLoc"/>
			<xs:element name="TicketNo" type="AirTicketNo"/>
			<xs:element name="Status" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of the ticket as it came from the Air system, for example, TK</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="15"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PNRLink">
		<xs:annotation>
			<xs:documentation>Link between PNRs (their Record Locators), passengers and legs.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RecordID" type="RecordID" minOccurs="0"/>
			<xs:element name="RecLoc" type="RecLoc">
				<xs:annotation>
					<xs:documentation>Record Locator of the reservation in the Central Air system (aka PNR)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaxRefID" type="PaxRefID"/>
			<xs:element name="SegSeqN" type="xs:positiveInteger">
				<xs:annotation>
					<xs:documentation>Corresponds to Segment.SegmentSeqN</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegSeqN" type="xs:positiveInteger">
				<xs:annotation>
					<xs:documentation>Corresponds to Leg.LegSeqN</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AirlineRecLoc" type="RecLoc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Record Locator of the reservation in the Airline system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeatNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Assigned Seat</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="15"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="ExtraSeatNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Assigned second Seat (if Extra seat is required)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="15"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SeatsQty" type="xs:nonNegativeInteger" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActualAirData">
		<xs:annotation>
			<xs:documentation>Complete representation of Air Booking on Seaware side (guest references, itinerary and cost).
Note that given Air Booking can reference guests from different cruise bookings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RecordID" type="RecordID" minOccurs="0"/>
			<xs:element name="AirBookingID" type="AirBookingID" minOccurs="0"/>
			<xs:element name="ResIDs" type="RecordIDList" minOccurs="0"/>
			<xs:element name="Status" type="ActualAirStatus"/>
			<xs:element name="Passengers">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Passenger" type="PassengerWithParent" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FareKind" type="FareKind" minOccurs="0">
				<xs:annotation>
					<xs:documentation>May not be provided by RightRez.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Segments">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Segment" type="ActualAirSegment" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Cost" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CostItem" type="AirCostItem" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Tickets" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Ticket" type="AirTicket" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TicketByDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ticket by date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Penalties" minOccurs="0">
				<xs:complexType>
					<xs:choice>
						<xs:element name="Amount" type="Money"/>
						<xs:element name="Percent" type="Percent"/>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="PaymentDue" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:choice>
							<xs:element name="Date" type="xs:date"/>
							<xs:element name="DateTime" type="xs:dateTime"/>
						</xs:choice>
						<xs:element name="Amount" type="Money" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PNRLinks" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PNRLink" type="PNRLink" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SearchParams" type="AirSearchParams" minOccurs="0"/>
			<xs:element name="MatchResults" type="ActualMatchResults" minOccurs="0"/>
			<xs:element name="IsPaid" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If 'N' - this air booking can be automatically cancelled after certain period of time, usually 24 hours.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IsBundled" type="Boolean" default="N" minOccurs="0"/>
			<xs:element name="IsExternal" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If Y - the air booking was created as a result of the Reverse PNR operation</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TktAuthSent" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If 'Y' - the Ticket Authorization message has been sent to the Air system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedAt" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="UpdatedAt" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="EffectiveDate" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="Version" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Air Booking Version</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HoldUpdatesToAirSystem" type="Boolean" default="N" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If 'Y' - changes in client information or cruise itinerary will not be sent to the external air system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActualAirDataPriced">
		<xs:annotation>
			<xs:documentation>Same as ActualAirData, but with prices adjusted by Seaware business rules.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ActualAirData">
				<xs:sequence>
					<xs:element name="AdjustedPrices" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Seaware Res Invoice Items calculated based on PriceItems.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="ResPriceItem" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:all>
											<xs:element name="GuestRefs" type="GuestRefs">
												<xs:annotation>
													<xs:appinfo source="Versonix">
														<XMLBridge>Implemented</XMLBridge>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="Type" type="InvoiceItemType">
												<xs:annotation>
													<xs:documentation>Invoice Item Type (must be setup in SeaWare)</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="SubType1" type="InvoiceItemSubType" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Invoice item subtype 1</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="SubType2" type="InvoiceItemSubType" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Invoice item subtype 2</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="SubType3" type="InvoiceItemSubType" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Invoice item subtype 3</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="Amount" type="Money">
												<xs:annotation>
													<xs:documentation>Invoice item amount</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="PromoCode" type="PromotionCode" minOccurs="0">
												<xs:annotation/>
											</xs:element>
											<xs:element name="CmsPercent" type="Percent" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Commission percent.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:all>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="PriceTotals" minOccurs="0">
						<xs:annotation>
							<xs:documentation>This element represents booking/guest totals with selected Air</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="PriceTotal" type="Money">
									<xs:annotation>
										<xs:documentation>Total price of the booking if this Air is selected</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="GuestTotal" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="GuestSeqN" type="GuestSeqN"/>
											<xs:element name="PriceTotal" type="Money"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ActualAirDataSaved">
		<xs:annotation>
			<xs:documentation>Temporary Air Header stored as part of session state. For internal use only!</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ActualAirDataPriced">
				<xs:sequence>
					<xs:element name="SearchReference" type="SearchReference" minOccurs="0"/>
					<xs:element name="ItineraryReference" type="ItineraryReference" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ActualMatchResults">
		<xs:annotation>
			<xs:documentation>Results of matching of actual air data with the cruise booking.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PaxRefs" type="PaxRefs"/>
						<xs:element name="SegmentSeqN" type="xs:positiveInteger"/>
						<xs:element name="AirPointCode" type="AirPointCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Populated if this air record was successfully matched with one of the air points on the cruise booking.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ErrorCodes" minOccurs="0">
							<xs:simpleType>
								<xs:list itemType="MismatchCode"/>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ErrorsAreAcknowledged" type="Boolean">
				<xs:annotation>
					<xs:documentation>'Y' - match errors have been reviewed by users and can be ignored from now on. The match process will be repeated if/when Air Point information changes on the booking,  an Air Booking update is received from the Air system or Flight Information is updated for the Independent record.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--===================================  -->
	<!--Following elements are part of ResShell. They are used as standalone ones in ResObject API.-->
	<!--===================================  -->
	<xs:element name="AuthorizationCodes">
		<xs:annotation>
			<xs:documentation> Res. Authorization Codes</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="CodeItem" type="AuthorizationCodeItem" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ResRoomRequests">
		<xs:annotation>
			<xs:documentation>Accomodation requests for hotel rooms</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ResRoomRequest" type="ResRoomRequest" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ResPackages">
		<xs:annotation>
			<xs:documentation>Primary packages.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ResPackage" type="ResPackage" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Primary package. Currently primary package can
									contain one sail only.</xs:documentation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ResCharges">
		<xs:annotation>
			<xs:documentation>Reservation charges.</xs:documentation>
			<xs:appinfo source="Versonix">
				<XMLBridge>Implemented</XMLBridge>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Action" type="ResChargeableAction" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:appinfo source="Versonix">
							<XMLBridge>Implemented</XMLBridge>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="CategoryAttribute">
		<xs:annotation>
			<xs:documentation>Implemented in 041113 only.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="LongCode"/>
			<xs:choice>
				<xs:element name="StrVal" type="LongCode"/>
				<xs:element name="NumVal" type="Count"/>
			</xs:choice>
			<xs:element name="Type" default="PRICE" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="PRICE"/>
						<xs:enumeration value="BERTH"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResGtbDelivery">
		<xs:annotation>
			<xs:documentation>Guest's Travel Booklet Delivery Information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GtbDeliveryInfo" type="GtbDeliveryInfo" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResGtbRequests">
		<xs:annotation>
			<xs:documentation>Guest's Travel Booklet Requests. Output Only</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GtbRequest" type="GtbRequest" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Guests Gtb Delivery</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GtbDeliveryInfo">
		<xs:annotation>
			<xs:documentation>Delivery Information for Guest Travel Booklet(GTB)</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestRefs" type="GuestRefs">
				<xs:annotation>
					<xs:documentation>Whitespace separated list of guest sequence numbers this Delivery information should be applied to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PickupLocation">
				<xs:annotation>
					<xs:documentation>Document Delivery Location Type</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="25"/>
						<xs:whiteSpace value="collapse"/>
						<xs:enumeration value="DEFAULT"/>
						<xs:enumeration value="ALTERNATIVE ADDRESS"/>
						<xs:enumeration value="HOUSEHOLD"/>
						<xs:enumeration value="PIER"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DeliveryDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specific Delivery Date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeliveryInstruction" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specific Delivery instruction</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DeliveryReason" type="xs:string" minOccurs="0"/>
			<xs:element name="Address" type="DocAddr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Document Delivery Address. Will be ignored if Pickup Location is not Alternative Address</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PhoneNumber" type="PhoneNumber" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Document Delivery Contact Phone. Will be ignored if Pickup Location is not Alternative Address</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PhoneExtension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Document Delivery Contact Phone Extension. Will be ignored if Pickup Location is not Alternative Address</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="6"/>
						<xs:whiteSpace value="collapse"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CompanyName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Document Delivery Contact Name. Will be ignored if Pickup Location is not Alternative Address</xs:documentation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="GtbRequest">
		<xs:annotation>
			<xs:documentation>Information of existed GTB Requests </xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="GuestSeqN" type="GuestSeqN"/>
			<xs:element name="FullName" type="xs:string" minOccurs="0"/>
			<xs:element name="RequestID" type="RecordID"/>
			<xs:element name="RequestStatus" type="xs:string"/>
			<xs:element name="Carrier" type="xs:string" minOccurs="0"/>
			<xs:element name="DeliveryFeedback" type="xs:string" minOccurs="0"/>
			<xs:element name="TrackingNumber" type="xs:string" minOccurs="0"/>
			<xs:element name="ShippingDate" type="xs:dateTime" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="PaymentCollectionInfo">
		<xs:sequence>
			<xs:element name="DueType" type="DueType">
				<xs:annotation>
					<xs:appinfo source="Versonix">
						<XMLBridge>Implemented</XMLBridge>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DesignatedPaymentCode" type="xs:string" minOccurs="0"/>
			<xs:element name="PaymentCollectionMode" type="PaymentCollectionMode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PaymentCollectionMode">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:enumeration value="IGNORE"/>
			<xs:enumeration value="SUGGEST"/>
			<xs:enumeration value="REQUIRE"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
