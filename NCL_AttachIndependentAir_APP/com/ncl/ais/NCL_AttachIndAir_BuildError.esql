BROKER SCHEMA com.ncl.ais


CREATE COMPUTE MODULE NCL_AttachIndAir_LoadBookingBuildError
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.LoadBooking_OUT.Errors;
		DECLARE rEnvIn REFERENCE TO rEnv.InputMsg.XMLNSC.*:NCL_CruiseAttachIndependentAirRQ;
		
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('MQMD') NAME 'MQMD';
		-- Set the MQMD header details from the Environment
		SET OutputRoot.MQMD = Environment.MQMD;
		SET OutputRoot.MQMD.Expiry = MSG_EXPIRY;
		SET OutputRoot.MQMD.Format = MQFMT_STRING;	
		-- If no Reply To Queue mentioned, default to the queue defined in UDP
		IF LENGTH(TRIM(InputRoot.MQMD.ReplyToQ)) = 0 
		THEN
			SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;	
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';			
		-- if errors exist in response then propagate to the generic warning node to handle the error.
   		SET OutputRoot.XMLNSC.Body.Errors = InputRoot.XMLNSC.LoadBooking_OUT.Errors;
   		SET OutputRoot.XMLNSC.Body.Code = rEnvIn.*:POS.*:Source.*:BookingChannel.*:CompanyName.(XMLNSC.Attribute)Code;
   		SET OutputRoot.XMLNSC.Body.FlowName = 'NCL_CruiseAttachIndependentAirRS';	

		RETURN TRUE;
	END;
END MODULE;
CREATE COMPUTE MODULE NCL_AttachIndAir_UpdateBookingBuildError
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.UpdateBooking_OUT.Errors;
		DECLARE rEnvIn REFERENCE TO rEnv.InputMsg.XMLNSC.*:NCL_CruiseAttachIndependentAirRQ;
		
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('MQMD') NAME 'MQMD';
		-- Set the MQMD header details from the Environment
		SET OutputRoot.MQMD = Environment.MQMD;
		SET OutputRoot.MQMD.Expiry = MSG_EXPIRY;
		SET OutputRoot.MQMD.Format = MQFMT_STRING;	
		-- If no Reply To Queue mentioned, default to the queue defined in UDP
		IF LENGTH(TRIM(InputRoot.MQMD.ReplyToQ)) = 0 
		THEN
			SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;	
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';			
		-- if errors exist in response then propagate to the generic warning node to handle the error.
   		SET OutputRoot.XMLNSC.Body.Errors = InputRoot.XMLNSC.UpdateBooking_OUT.Errors;
   		SET OutputRoot.XMLNSC.Body.Code = rEnvIn.*:POS.*:Source.*:BookingChannel.*:CompanyName.(XMLNSC.Attribute)Code;
   		SET OutputRoot.XMLNSC.Body.FlowName = 'NCL_CruiseAttachIndependentAirRS';	

		RETURN TRUE;
	END;
END MODULE;
CREATE COMPUTE MODULE NCL_AttachIndAir_StoreBookingBuildError
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		DECLARE rIn REFERENCE TO InputRoot.XMLNSC.StoreBooking_OUT.Errors;
		DECLARE rEnvIn REFERENCE TO rEnv.InputMsg.XMLNSC.*:NCL_CruiseAttachIndependentAirRQ;
		
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('MQMD') NAME 'MQMD';
		-- Set the MQMD header details from the Environment
		SET OutputRoot.MQMD = Environment.MQMD;
		SET OutputRoot.MQMD.Expiry = MSG_EXPIRY;
		SET OutputRoot.MQMD.Format = MQFMT_STRING;	
		-- If no Reply To Queue mentioned, default to the queue defined in UDP
		IF LENGTH(TRIM(InputRoot.MQMD.ReplyToQ)) = 0 
		THEN
			SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;	
		
		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';			
		-- if errors exist in response then propagate to the generic warning node to handle the error.
   		SET OutputRoot.XMLNSC.Body.Errors = InputRoot.XMLNSC.StoreBooking_OUT.Errors;
   		SET OutputRoot.XMLNSC.Body.Code = rEnvIn.*:POS.*:Source.*:BookingChannel.*:CompanyName.(XMLNSC.Attribute)Code;
   		SET OutputRoot.XMLNSC.Body.FlowName = 'NCL_CruiseAttachIndependentAirRS';	

		RETURN TRUE;
	END;
END MODULE;