

BROKER SCHEMA com.ncl.ais


CREATE COMPUTE MODULE NCL_AttachIndAir_BuildResp
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv,rOutResp,vErrMsgTemp REFERENCE TO Environment.Variables;
		DECLARE rEnvInMsg REFERENCE TO rEnv.InputMsg.XMLNSC.*:NCL_CruiseAttachIndependentAirRQ;
		DECLARE rOut REFERENCE TO OutputRoot.XMLNSC.*:NCL_CruiseAttachIndependentAirRS;
		DECLARE vBoolCanBeStored BOOLEAN;

		CREATE LASTCHILD OF OutputRoot DOMAIN('MQMD') NAME 'MQMD';
		SET OutputRoot.MQMD = Environment.MQMD;

		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC AS rOutResp IDENTITY NCL_CruiseAttachIndependentAirRS;
		DECLARE rStoreBkgOut REFERENCE TO InputRoot.XMLNSC.StoreBooking_OUT;
		SET OutputRoot.MQMD.Expiry = MSG_EXPIRY;
		SET OutputRoot.MQMD.Format = MQFMT_STRING;
		-- If no Reply To Queue mentioned, default to the queue defined in UDP
		IF LENGTH(TRIM(InputRoot.MQMD.ReplyToQ)) = 0
			THEN
			SET OutputRoot.MQMD.ReplyToQ = DEFAULT_REPLYQ;
		END IF;
		IF ((EXISTS (rStoreBkgOut.Errors.Error[])) 
			AND (EXISTS(SELECT E.* FROM rStoreBkgOut.Errors.Error[] AS E 
						WHERE (E.ErrorSeverity IN ('E','F','OPERATION','EXCEPTION','FATAL') OR
								COALESCE(E.BookingValidation.CanBeStored, '') ='N' ))))
			THEN
			CALL CopyEntireMessage();

			PROPAGATE TO LABEL 'STOREBKG_ERROR';
			RETURN FALSE;
		ELSE
			CREATE FIELD OutputRoot.XMLNSC.*:NCL_CruiseAttachIndependentAirRS AS rOut;
			CALL com.ncl.ais.utils.CopyAttributes(rEnvInMsg,rOut);
			CREATE FIELD OutputRoot.XMLNSC.*:NCL_CruiseAttachIndependentAirRS.Success NAME 'Success';
			-- SET bPayload = ASBITSTREAM(OutputRoot.XMLNSC CCSID 1208 ENCODING 546);
			-- CALL com.ncl.iib.log.AddPayloadLogEvent(bPayload, NodeLabel, 'Add Independent Air', 'xml', rEnv);

			RETURN TRUE;
		END IF ;

	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE NCL_AttachIndAir_SetEndpoint
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv REFERENCE TO Environment.Variables;
		SET OutputRoot.MQMD = Environment.MQMD;
		SET OutputRoot.MQMD.Format = MQFMT_RF_HEADER_2;
		SET OutputRoot.MQRFH2.usr.Endpoint = Environment.Variables.Endpoint;

		IF EXISTS(InputRoot.BLOB.BLOB[]) THEN

			SET OutputRoot.BLOB.BLOB = InputRoot.BLOB.BLOB;
		ELSE
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		END IF;
		
			PROPAGATE TO TERMINAL 'out1';
			
		IF FIELDVALUE(rEnv.SessionID) IS NOT NULL THEN
			SET OutputRoot = NULL;
			SET OutputRoot.HTTPRequestHeader."x-upstream" = Environment.Variables.Endpoint;
			SET OutputRoot.XMLNSC.Logout_IN.MsgHeader.Version = com.ncl.ais.utils.GetVersonixAPIVersion();
			SET OutputRoot.XMLNSC.Logout_IN.MsgHeader.SessionGUID = rEnv.SessionID;
			RETURN TRUE;
		END IF;
		
		RETURN FALSE;

		
	END;
END MODULE;