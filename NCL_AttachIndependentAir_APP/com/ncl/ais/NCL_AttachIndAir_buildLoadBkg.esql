BROKER SCHEMA com.ncl.ais
DECLARE sch NAMESPACE 'http://versonix.com/api/schemas';


CREATE COMPUTE MODULE NCL_AttachIndAir_buildLoadBkg
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE rEnv,rOutResp REFERENCE TO Environment.Variables;
	    DECLARE rEnvInMsg REFERENCE TO rEnv.InputMsg.XMLNSC.*:NCL_CruiseAttachIndependentAirRQ;
	    DECLARE rAgency REFERENCE TO InputRoot.XMLNSC.VerifyAgencyResponse;
	    
	    SET rEnv.Endpoint = COALESCE(rAgency.*:endpoint,'');
	    SET rEnv.SessionID = rAgency.sessionGUID;
	    SET OutputRoot.HTTPRequestHeader."x-upstream" = rEnv.Endpoint;
		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';
	    CREATE LASTCHILD OF OutputRoot.XMLNSC AS rOutResp IDENTITY LoadBooking_IN;
	    
	    CALL com.ncl.ais.utils.CreateVersonixHeader(rEnv.SessionID,rOutResp);
	    
--	    SET rOutResp.MsgHeader.Version = VersonixAPIVersion;
--	    SET rOutResp.MsgHeader.SessionGUID = rAgency.sessionGUID;
	    SET rOutResp.ResID = rEnvInMsg.sc:ReservationId;
	    SET rOutResp.Options.Lock = 'Y';
	    SET rOutResp.ResShellOptions.IncludeElements = 'ResHeader ResComponents ResPackages ResAirPoints ResAirIndependents';
	    
	   
	    
	    --CREATE LASTCHILD OF OutputRoot.XMLNSC AS rVXReq IDENTITY LoadBooking_IN;
	    
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
