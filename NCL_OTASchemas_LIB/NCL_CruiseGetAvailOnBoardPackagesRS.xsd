<?xml version="1.0" encoding="UTF-8"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://nclapi/schemas" version="3.1" xmlns="http://nclapi/schemas" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<xs:include schemaLocation="OTA_CommonPrefs.xsd"/>
	<xs:include schemaLocation="OTA_CommonTypes.xsd"/>
	<xs:include schemaLocation="OTA_SimpleTypes.xsd"/>
	<xs:include schemaLocation="OTA_CruiseCommonTypes.xsd"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">All Schema files in the OTA 
specification are made available according to the terms defined by the OTA 
License Agreement at 
http://www.opentravel.org/ota_downloads_form.cfm</xs:documentation>
	</xs:annotation>
	<xs:element name="NCL_CruiseGetAvailOnBoardPackagesRS">
		<xs:annotation>
			<xs:documentation xml:lang="en">
The GetAvailOnBoardPackage message retrieves all the packages available for a given reservationID.
</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice>
				<xs:sequence>
					<xs:element name="Success" type="SuccessType">
						<xs:annotation>
							<xs:documentation> Standard way to indicate successful 
processing of an OTA message. Returning an empty element of this type indicates 
success.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="Warnings" type="WarningsType">
						<xs:annotation>
							<xs:documentation> Standard way to indicate successful 
processing of an OTA message, but one in which warnings are 
generated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" name="Packages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="Package" type="OnBoardPackageDefinition"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:element minOccurs="0" name="Errors" type="ErrorsType">
					<xs:annotation>
						<xs:documentation> A collection of errors that occurred during 
the processing of a message.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:attributeGroup ref="OTA_PayloadStdAttributes"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="OnBoardPackageDefinition">
		<xs:sequence>
			<xs:element name="Type" type="OnBoardPackageType">
				<xs:annotation>
					<xs:documentation>Determins the type of the onboard package (ENTERTAINMENT,SPA,DINING)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="StringLength1to64">
				<xs:annotation>
					<xs:documentation>Name of the package</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Code" type="StringLength1to32">
				<xs:annotation>
					<xs:documentation>Unique code of package that varies based on the package type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Comments" type="StringLength1to64">
				<xs:annotation>
					<xs:documentation>Detailed description of the package</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateRange" type="PackageDateRangeType">
				<xs:annotation>
					<xs:documentation>Lists the package start date and end date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="PackagePriceType">
				<xs:annotation>
					<xs:documentation>List the price of each package for each guest who chose the package</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="TableSize" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Size of the table for accomodating the guests.This is returned only for DINING packages</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Status" type="OTA_CodeType">
				<xs:annotation>
					<xs:documentation>Inventory availability status.The OTA external code table STS would be used.At present the following status are supported (GTY,WTL,AVL)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="IdentifierGroup"/>
	</xs:complexType>
</xs:schema>