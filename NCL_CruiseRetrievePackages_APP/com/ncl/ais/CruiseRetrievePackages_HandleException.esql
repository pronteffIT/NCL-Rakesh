BROKER SCHEMA com.ncl.ais
-- Declaring the UDPs and NameSpaces
DECLARE MsgExpiry EXTERNAL INTEGER 3000;
DECLARE DefaultReplyQ EXTERNAL CHARACTER 'NCL_CRUISE_RETRIEVE_PCKGS_RESP';
DECLARE ns NAMESPACE 'http://nclapi/schemas';

CREATE COMPUTE MODULE CruiseRetrievePackages_HandleException
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
			DECLARE rEnv,rOutResp,rOutErrors REFERENCE TO Environment.Variables;
		DECLARE rExcp REFERENCE TO InputExceptionList;

		DECLARE cLocalTranId CHARACTER COALESCE(InputRoot.MQMD.MsgId, UUIDASCHAR);
		DECLARE bPayload BLOB ASBITSTREAM(InputRoot.XMLNSC CCSID 1208 ENCODING 546);
		SET cLocalTranId = TRANSLATE(cLocalTranId, 'X''', '');

		CALL CopyMessageHeaders();
		-- If no Reply To Queue mentioned, default to the queue defined in UDP
		IF LENGTH(TRIM(InputRoot.MQMD.ReplyToQ)) = 0 THEN
			SET OutputRoot.MQMD.ReplyToQ = DefaultReplyQ;
		END IF;		
		
		IF NOT EXISTS(rEnv.Temp.Protocol[]) THEN
			IF EXISTS(InputLocalEnvironment.Destination.CallableFlow.Reply.ReplyIdentifier[]) THEN
				SET rEnv.Temp.Protocol = 'CALLABLE';
			ELSE
				SET rEnv.Temp.Protocol = 'MQ';
			END IF;
		END IF;
		
		IF NOT EXISTS(Environment.Variables[]) THEN
			CREATE FIELD Environment.Variables AS rEnv;
		END IF;

		IF NOT EXISTS(rEnv.GTM.LogEvent[]) THEN
			CALL com.ncl.iib.log.CreateAuditLogEvent(rEnv, cLocalTranId, '', '');
			IF (LogPayLoad) THEN
				--creating IIB Log Event
				CALL com.ncl.iib.log.AddPayloadLogEvent(bPayload, NodeLabel, 'Cruise Retrive Packages Request', 'xml', rEnv);
			END IF;	
		ELSE
			CALL com.ncl.iib.log.AddLogEvent(NodeLabel, 'Unhandled Exception in IIB : Internal IIB Error', rEnv);
		END IF;

		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC AS rOutResp IDENTITY ns:NCL_CruiseRetrievePackagesRS;
		-- Copy root level attributes from environment if the Input Message was stored
		IF EXISTS (rEnv.InReq.*:NCL_CruiseRetrievePackagesRQ[])
			THEN
			DECLARE RefInReq REFERENCE TO rEnv.InReq.*:NCL_CruiseRetrievePackagesRQ;
			CALL com.ncl.ais.utils.CopyAttributes (RefInReq,rOutResp);
		END IF;

		IF EXISTS(InputExceptionList.RecoverableException[]) THEN
			CALL com.ncl.iib.utils.getExceptionSummary(rEnv, rExcp);
		END IF;

		DECLARE cErrorText CHARACTER COALESCE(rEnv.ErrorSummary.ErrorText, 'Internal IIB Error, please check the logs');

		SET rOutResp.ns:Errors.ns:Error = cErrorText;
		SET rOutResp.ns:Errors.ns:Error.(XMLNSC.Attribute)Code = '12228';
		SET rOutResp.ns:Errors.ns:Error.(XMLNSC.Attribute)ShortText = 'System error from back end. Please try again later';
		SET rOutResp.ns:Errors.ns:Error.(XMLNSC.Attribute)Type = '3';	
		
		IF (LogPayLoad) THEN		
			-- Add response msg to log event
			SET bPayload = ASBITSTREAM(OutputRoot.XMLNSC CCSID 1208 ENCODING 546);
			CALL com.ncl.iib.log.AddPayloadLogEvent(bPayload, NodeLabel, 'Cruise Retrive Packages Response message', 'xml', rEnv);
		END IF;
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;				

		SET OutputRoot = InputRoot;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;

